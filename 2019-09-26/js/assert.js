// Generated by CoffeeScript 2.4.1
var Curl, assert, chai, check, checkAll, curl;

chai = require('chai');

assert = chai.assert.deepEqual;

//###
// This file is making asserts about the API.
//###
Curl = require('curl-request');

curl = new Curl();

curl.put = (url) => { // Monkey Patching PUT as it is missing.
  curl._setUrl(url);
  curl.setOpt(curl.libcurl.option.CUSTOMREQUEST, 'PUT');
  return curl._submit();
};

check = async function(type, url, body, expect) {
  var response;
  response = (await curl.setBody(body)[type]('localhost:3000' + url));
  return assert(response.body, JSON.stringify(expect));
};

//########################### This is the specific part
checkAll = async function() {
  await check('delete', '/todos', {}, []);
  await check('post', '/todos/demo', {}, [
    {
      id: 1,
      text: "buy food",
      done: false
    },
    {
      id: 2,
      text: "fetch lamps",
      done: false
    },
    {
      id: 3,
      text: "walk dog",
      done: false
    },
    {
      id: 4,
      text: "feed cat",
      done: false
    },
    {
      id: 5,
      text: "köp räksmörgåsar",
      done: false
    }
  ]);
  await check('get', '/todos/1', {}, {
    id: 1,
    text: "buy food",
    done: false
  });
  await check('post', '/todos', {
    text: 'Cut the grass'
  }, {
    id: 6,
    text: "Cut the grass",
    done: false
  });
  await check('get', '/todos/6', {}, {
    id: 6,
    text: "Cut the grass",
    done: false
  });
  await check('put', '/todos', {
    id: 6,
    text: "Klipp gräset",
    done: true
  }, {
    id: 6,
    text: "Klipp gräset",
    done: true
  });
  await check('patch', '/todos', {
    id: 6,
    done: false
  }, {
    id: 6,
    text: "Klipp gräset",
    done: false
  });
  await check('patch', '/todos', {
    id: 6
  }, {
    id: 6,
    text: "Klipp gräset",
    done: false
  });
  await check('put', '/todos', {
    id: 6,
    done: true
  }, {
    id: 6,
    done: true
  });
  return console.log('Ready!');
};

checkAll();

//###########################

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNzZXJ0LmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXGFzc2VydC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUEsSUFBQSxFQUFBLE1BQUEsRUFBQSxJQUFBLEVBQUEsS0FBQSxFQUFBLFFBQUEsRUFBQTs7QUFBQSxJQUFBLEdBQU8sT0FBQSxDQUFRLE1BQVI7O0FBQ1AsTUFBQSxHQUFTLElBQUksQ0FBQyxNQUFNLENBQUMsVUFEckI7Ozs7O0FBT0EsSUFBQSxHQUFPLE9BQUEsQ0FBUSxjQUFSOztBQUVQLElBQUEsR0FBTyxJQUFJLElBQUosQ0FBQTs7QUFFUCxJQUFJLENBQUMsR0FBTCxHQUFXLENBQUMsR0FBRCxDQUFBLEdBQUEsRUFBQTtFQUNWLElBQUksQ0FBQyxPQUFMLENBQWEsR0FBYjtFQUNBLElBQUksQ0FBQyxNQUFMLENBQVksSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsYUFBaEMsRUFBK0MsS0FBL0M7U0FDQSxJQUFJLENBQUMsT0FBTCxDQUFBO0FBSFU7O0FBS1gsS0FBQSxHQUFRLE1BQUEsUUFBQSxDQUFDLElBQUQsRUFBTSxHQUFOLEVBQVUsSUFBVixFQUFlLE1BQWYsQ0FBQTtBQUNQLE1BQUE7RUFBQSxRQUFBLEdBQVcsQ0FBQSxNQUFNLElBQUksQ0FBQyxPQUFMLENBQWEsSUFBYixDQUFtQixDQUFBLElBQUEsQ0FBbkIsQ0FBeUIsZ0JBQUEsR0FBbUIsR0FBNUMsQ0FBTjtTQUNYLE1BQUEsQ0FBTyxRQUFRLENBQUMsSUFBaEIsRUFBc0IsSUFBSSxDQUFDLFNBQUwsQ0FBZSxNQUFmLENBQXRCO0FBRk8sRUFoQlI7OztBQXNCQSxRQUFBLEdBQVcsTUFBQSxRQUFBLENBQUEsQ0FBQTtFQUNWLE1BQU0sS0FBQSxDQUFNLFFBQU4sRUFBZSxRQUFmLEVBQXdCLENBQUEsQ0FBeEIsRUFBMkIsRUFBM0I7RUFDTixNQUFNLEtBQUEsQ0FBTSxNQUFOLEVBQWUsYUFBZixFQUE2QixDQUFBLENBQTdCLEVBQWlDO0lBQUM7TUFBQyxFQUFBLEVBQUcsQ0FBSjtNQUFNLElBQUEsRUFBSyxVQUFYO01BQXNCLElBQUEsRUFBSztJQUEzQixDQUFEO0lBQW1DO01BQUMsRUFBQSxFQUFHLENBQUo7TUFBTSxJQUFBLEVBQUssYUFBWDtNQUF5QixJQUFBLEVBQUs7SUFBOUIsQ0FBbkM7SUFBd0U7TUFBQyxFQUFBLEVBQUcsQ0FBSjtNQUFNLElBQUEsRUFBSyxVQUFYO01BQXNCLElBQUEsRUFBSztJQUEzQixDQUF4RTtJQUEwRztNQUFDLEVBQUEsRUFBRyxDQUFKO01BQU0sSUFBQSxFQUFLLFVBQVg7TUFBc0IsSUFBQSxFQUFLO0lBQTNCLENBQTFHO0lBQTRJO01BQUMsRUFBQSxFQUFHLENBQUo7TUFBTSxJQUFBLEVBQUssa0JBQVg7TUFBOEIsSUFBQSxFQUFLO0lBQW5DLENBQTVJO0dBQWpDO0VBQ04sTUFBTSxLQUFBLENBQU0sS0FBTixFQUFlLFVBQWYsRUFBMkIsQ0FBQSxDQUEzQixFQUErQjtJQUFDLEVBQUEsRUFBRyxDQUFKO0lBQU0sSUFBQSxFQUFLLFVBQVg7SUFBc0IsSUFBQSxFQUFLO0VBQTNCLENBQS9CO0VBQ04sTUFBTSxLQUFBLENBQU0sTUFBTixFQUFlLFFBQWYsRUFBeUI7SUFBQyxJQUFBLEVBQUs7RUFBTixDQUF6QixFQUFpRDtJQUFDLEVBQUEsRUFBRyxDQUFKO0lBQU0sSUFBQSxFQUFLLGVBQVg7SUFBMkIsSUFBQSxFQUFLO0VBQWhDLENBQWpEO0VBQ04sTUFBTSxLQUFBLENBQU0sS0FBTixFQUFlLFVBQWYsRUFBMkIsQ0FBQSxDQUEzQixFQUErQjtJQUFDLEVBQUEsRUFBRyxDQUFKO0lBQU0sSUFBQSxFQUFLLGVBQVg7SUFBMkIsSUFBQSxFQUFLO0VBQWhDLENBQS9CO0VBQ04sTUFBTSxLQUFBLENBQU0sS0FBTixFQUFlLFFBQWYsRUFBeUI7SUFBQyxFQUFBLEVBQUcsQ0FBSjtJQUFNLElBQUEsRUFBSyxjQUFYO0lBQTBCLElBQUEsRUFBSztFQUEvQixDQUF6QixFQUErRDtJQUFDLEVBQUEsRUFBRyxDQUFKO0lBQU0sSUFBQSxFQUFLLGNBQVg7SUFBMEIsSUFBQSxFQUFLO0VBQS9CLENBQS9EO0VBQ04sTUFBTSxLQUFBLENBQU0sT0FBTixFQUFlLFFBQWYsRUFBeUI7SUFBQyxFQUFBLEVBQUcsQ0FBSjtJQUFNLElBQUEsRUFBSztFQUFYLENBQXpCLEVBQTRDO0lBQUMsRUFBQSxFQUFHLENBQUo7SUFBTSxJQUFBLEVBQUssY0FBWDtJQUEwQixJQUFBLEVBQUs7RUFBL0IsQ0FBNUM7RUFDTixNQUFNLEtBQUEsQ0FBTSxPQUFOLEVBQWUsUUFBZixFQUF5QjtJQUFDLEVBQUEsRUFBRztFQUFKLENBQXpCLEVBQWlDO0lBQUMsRUFBQSxFQUFHLENBQUo7SUFBTSxJQUFBLEVBQUssY0FBWDtJQUEwQixJQUFBLEVBQUs7RUFBL0IsQ0FBakM7RUFDTixNQUFNLEtBQUEsQ0FBTSxLQUFOLEVBQWUsUUFBZixFQUF5QjtJQUFDLEVBQUEsRUFBRyxDQUFKO0lBQU0sSUFBQSxFQUFLO0VBQVgsQ0FBekIsRUFBMkM7SUFBQyxFQUFBLEVBQUcsQ0FBSjtJQUFNLElBQUEsRUFBSztFQUFYLENBQTNDO1NBQ04sT0FBTyxDQUFDLEdBQVIsQ0FBWSxRQUFaO0FBVlU7O0FBV1gsUUFBQSxDQUFBOztBQWpDQSIsInNvdXJjZXNDb250ZW50IjpbImNoYWkgPSByZXF1aXJlICdjaGFpJ1xyXG5hc3NlcnQgPSBjaGFpLmFzc2VydC5kZWVwRXF1YWxcclxuXHJcbiMjIyNcclxuIyBUaGlzIGZpbGUgaXMgbWFraW5nIGFzc2VydHMgYWJvdXQgdGhlIEFQSS5cclxuIyMjI1xyXG5cclxuQ3VybCA9IHJlcXVpcmUgJ2N1cmwtcmVxdWVzdCdcclxuXHJcbmN1cmwgPSBuZXcgQ3VybCgpXHJcblxyXG5jdXJsLnB1dCA9ICh1cmwpID0+ICMgTW9ua2V5IFBhdGNoaW5nIFBVVCBhcyBpdCBpcyBtaXNzaW5nLlxyXG5cdGN1cmwuX3NldFVybCB1cmxcclxuXHRjdXJsLnNldE9wdCBjdXJsLmxpYmN1cmwub3B0aW9uLkNVU1RPTVJFUVVFU1QsICdQVVQnXHJcblx0Y3VybC5fc3VibWl0KClcclxuIFxyXG5jaGVjayA9ICh0eXBlLHVybCxib2R5LGV4cGVjdCkgLT5cclxuXHRyZXNwb25zZSA9IGF3YWl0IGN1cmwuc2V0Qm9keShib2R5KVt0eXBlXSAnbG9jYWxob3N0OjMwMDAnICsgdXJsXHJcblx0YXNzZXJ0IHJlc3BvbnNlLmJvZHksIEpTT04uc3RyaW5naWZ5IGV4cGVjdFxyXG5cclxuIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyBUaGlzIGlzIHRoZSBzcGVjaWZpYyBwYXJ0XHJcblxyXG5jaGVja0FsbCA9IC0+XHJcblx0YXdhaXQgY2hlY2sgJ2RlbGV0ZScsJy90b2Rvcycse30sW11cclxuXHRhd2FpdCBjaGVjayAncG9zdCcsICAnL3RvZG9zL2RlbW8nLHt9LCBbe2lkOjEsdGV4dDpcImJ1eSBmb29kXCIsZG9uZTpmYWxzZX0se2lkOjIsdGV4dDpcImZldGNoIGxhbXBzXCIsZG9uZTpmYWxzZX0se2lkOjMsdGV4dDpcIndhbGsgZG9nXCIsZG9uZTpmYWxzZX0se2lkOjQsdGV4dDpcImZlZWQgY2F0XCIsZG9uZTpmYWxzZX0se2lkOjUsdGV4dDpcImvDtnAgcsOka3Ntw7ZyZ8Olc2FyXCIsZG9uZTpmYWxzZX1dXHJcblx0YXdhaXQgY2hlY2sgJ2dldCcsICAgJy90b2Rvcy8xJywge30sIHtpZDoxLHRleHQ6XCJidXkgZm9vZFwiLGRvbmU6ZmFsc2V9XHJcblx0YXdhaXQgY2hlY2sgJ3Bvc3QnLCAgJy90b2RvcycsIHt0ZXh0OidDdXQgdGhlIGdyYXNzJ30sIHtpZDo2LHRleHQ6XCJDdXQgdGhlIGdyYXNzXCIsZG9uZTpmYWxzZX1cclxuXHRhd2FpdCBjaGVjayAnZ2V0JywgICAnL3RvZG9zLzYnLCB7fSwge2lkOjYsdGV4dDpcIkN1dCB0aGUgZ3Jhc3NcIixkb25lOmZhbHNlfVxyXG5cdGF3YWl0IGNoZWNrICdwdXQnLCAgICcvdG9kb3MnLCB7aWQ6Nix0ZXh0OlwiS2xpcHAgZ3LDpHNldFwiLGRvbmU6dHJ1ZX0sIHtpZDo2LHRleHQ6XCJLbGlwcCBncsOkc2V0XCIsZG9uZTp0cnVlfVxyXG5cdGF3YWl0IGNoZWNrICdwYXRjaCcsICcvdG9kb3MnLCB7aWQ6Nixkb25lOmZhbHNlfSwge2lkOjYsdGV4dDpcIktsaXBwIGdyw6RzZXRcIixkb25lOmZhbHNlfVxyXG5cdGF3YWl0IGNoZWNrICdwYXRjaCcsICcvdG9kb3MnLCB7aWQ6Nn0sIHtpZDo2LHRleHQ6XCJLbGlwcCBncsOkc2V0XCIsZG9uZTpmYWxzZX1cclxuXHRhd2FpdCBjaGVjayAncHV0JywgICAnL3RvZG9zJywge2lkOjYsZG9uZTp0cnVlfSwge2lkOjYsZG9uZTp0cnVlfVxyXG5cdGNvbnNvbGUubG9nICdSZWFkeSEnXHJcbmNoZWNrQWxsKClcclxuXHJcbiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcclxuIl19
//# sourceURL=c:\github\LiveShare\2019-09-26\coffee\assert.coffee