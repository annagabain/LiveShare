// Generated by CoffeeScript 2.4.1
var DELETE, GET, PATCH, POST, checkAll, rest;

({rest, POST, GET, PATCH, DELETE} = require('./utilities'));

checkAll = async function() {
  console.clear();
  await DELETE('/todos', {}, []);
  await POST('/todos', {
    text: "buy food"
  }, {
    id: "1",
    text: "buy food",
    done: false
  });
  await GET('/todos', {}, [
    {
      id: "1",
      text: "buy food",
      done: false
    }
  ]);
  await POST('/todos', {
    text: "fetch lamps"
  }, {
    id: "2",
    text: "fetch lamps",
    done: false
  });
  await POST('/todos', {
    text: "walk dog"
  }, {
    id: "3",
    text: "walk dog",
    done: false
  });
  await POST('/todos', {
    text: "feed cat"
  }, {
    id: "4",
    text: "feed cat",
    done: false
  });
  await POST('/todos', {
    text: "köp räksmörgåsar"
  }, {
    id: "5",
    text: "köp räksmörgåsar",
    done: false
  });
  await GET('/todos/1', {}, {
    id: "1",
    text: "buy food",
    done: false
  });
  await POST('/todos', {
    text: 'Cut the grass'
  }, {
    id: "6",
    text: "Cut the grass",
    done: false
  });
  await GET('/todos/6', {}, {
    id: "6",
    text: "Cut the grass",
    done: false
  });
  await PATCH('/todos/6', {
    text: "Klipp gräset",
    done: true
  }, {
    id: "6",
    text: "Klipp gräset",
    done: true
  });
  await PATCH('/todos/6', {
    done: false
  }, {
    id: "6",
    text: "Klipp gräset",
    done: false
  });
  await PATCH('/todos/6', {}, {
    id: "6",
    text: "Klipp gräset",
    done: false
  });
  await DELETE('/todos/6', {}, {
    id: "6",
    text: "Klipp gräset",
    done: false
  });
  await DELETE('/todos/99', {}, {
    error: 404,
    message: "id 99 does not exist"
  });
  await GET('/todos/99', {}, {
    error: 404,
    message: "id 99 does not exist"
  });
  await PATCH('/todos/99', {}, {
    error: 404,
    message: "id 99 does not exist"
  });
  return console.log(rest());
};

checkAll();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNzZXJ0LmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXGFzc2VydC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUEsTUFBQSxFQUFBLEdBQUEsRUFBQSxLQUFBLEVBQUEsSUFBQSxFQUFBLFFBQUEsRUFBQTs7QUFBQSxDQUFBLENBQUMsSUFBRCxFQUFPLElBQVAsRUFBWSxHQUFaLEVBQWdCLEtBQWhCLEVBQXNCLE1BQXRCLENBQUEsR0FBZ0MsT0FBQSxDQUFRLGFBQVIsQ0FBaEM7O0FBRUEsUUFBQSxHQUFXLE1BQUEsUUFBQSxDQUFBLENBQUE7RUFDVixPQUFPLENBQUMsS0FBUixDQUFBO0VBQ0EsTUFBTSxNQUFBLENBQU8sUUFBUCxFQUFnQixDQUFBLENBQWhCLEVBQTJDLEVBQTNDO0VBQ04sTUFBTSxJQUFBLENBQU8sUUFBUCxFQUFnQjtJQUFDLElBQUEsRUFBSztFQUFOLENBQWhCLEVBQTJDO0lBQUMsRUFBQSxFQUFHLEdBQUo7SUFBUyxJQUFBLEVBQUssVUFBZDtJQUEwQixJQUFBLEVBQUs7RUFBL0IsQ0FBM0M7RUFDTixNQUFNLEdBQUEsQ0FBTyxRQUFQLEVBQWdCLENBQUEsQ0FBaEIsRUFBMkM7SUFBQztNQUFDLEVBQUEsRUFBRyxHQUFKO01BQVMsSUFBQSxFQUFLLFVBQWQ7TUFBMEIsSUFBQSxFQUFLO0lBQS9CLENBQUQ7R0FBM0M7RUFDTixNQUFNLElBQUEsQ0FBTyxRQUFQLEVBQWdCO0lBQUMsSUFBQSxFQUFLO0VBQU4sQ0FBaEIsRUFBMkM7SUFBQyxFQUFBLEVBQUcsR0FBSjtJQUFTLElBQUEsRUFBSyxhQUFkO0lBQTZCLElBQUEsRUFBSztFQUFsQyxDQUEzQztFQUNOLE1BQU0sSUFBQSxDQUFPLFFBQVAsRUFBZ0I7SUFBQyxJQUFBLEVBQUs7RUFBTixDQUFoQixFQUEyQztJQUFDLEVBQUEsRUFBRyxHQUFKO0lBQVMsSUFBQSxFQUFLLFVBQWQ7SUFBMEIsSUFBQSxFQUFLO0VBQS9CLENBQTNDO0VBQ04sTUFBTSxJQUFBLENBQU8sUUFBUCxFQUFnQjtJQUFDLElBQUEsRUFBSztFQUFOLENBQWhCLEVBQTJDO0lBQUMsRUFBQSxFQUFHLEdBQUo7SUFBUyxJQUFBLEVBQUssVUFBZDtJQUEwQixJQUFBLEVBQUs7RUFBL0IsQ0FBM0M7RUFDTixNQUFNLElBQUEsQ0FBTyxRQUFQLEVBQWdCO0lBQUMsSUFBQSxFQUFLO0VBQU4sQ0FBaEIsRUFBMkM7SUFBQyxFQUFBLEVBQUcsR0FBSjtJQUFTLElBQUEsRUFBSyxrQkFBZDtJQUFrQyxJQUFBLEVBQUs7RUFBdkMsQ0FBM0M7RUFDTixNQUFNLEdBQUEsQ0FBTyxVQUFQLEVBQWtCLENBQUEsQ0FBbEIsRUFBMkM7SUFBQyxFQUFBLEVBQUcsR0FBSjtJQUFTLElBQUEsRUFBSyxVQUFkO0lBQTBCLElBQUEsRUFBSztFQUEvQixDQUEzQztFQUNOLE1BQU0sSUFBQSxDQUFPLFFBQVAsRUFBZ0I7SUFBQyxJQUFBLEVBQUs7RUFBTixDQUFoQixFQUEyQztJQUFDLEVBQUEsRUFBRyxHQUFKO0lBQVMsSUFBQSxFQUFLLGVBQWQ7SUFBK0IsSUFBQSxFQUFLO0VBQXBDLENBQTNDO0VBQ04sTUFBTSxHQUFBLENBQU8sVUFBUCxFQUFrQixDQUFBLENBQWxCLEVBQTJDO0lBQUMsRUFBQSxFQUFHLEdBQUo7SUFBUyxJQUFBLEVBQUssZUFBZDtJQUErQixJQUFBLEVBQUs7RUFBcEMsQ0FBM0M7RUFDTixNQUFNLEtBQUEsQ0FBTyxVQUFQLEVBQWtCO0lBQUMsSUFBQSxFQUFLLGNBQU47SUFBcUIsSUFBQSxFQUFLO0VBQTFCLENBQWxCLEVBQW1EO0lBQUMsRUFBQSxFQUFHLEdBQUo7SUFBUyxJQUFBLEVBQUssY0FBZDtJQUE4QixJQUFBLEVBQUs7RUFBbkMsQ0FBbkQ7RUFDTixNQUFNLEtBQUEsQ0FBTyxVQUFQLEVBQWtCO0lBQUMsSUFBQSxFQUFLO0VBQU4sQ0FBbEIsRUFBMkM7SUFBQyxFQUFBLEVBQUcsR0FBSjtJQUFTLElBQUEsRUFBSyxjQUFkO0lBQThCLElBQUEsRUFBSztFQUFuQyxDQUEzQztFQUNOLE1BQU0sS0FBQSxDQUFPLFVBQVAsRUFBa0IsQ0FBQSxDQUFsQixFQUEyQztJQUFDLEVBQUEsRUFBRyxHQUFKO0lBQVMsSUFBQSxFQUFLLGNBQWQ7SUFBOEIsSUFBQSxFQUFLO0VBQW5DLENBQTNDO0VBQ04sTUFBTSxNQUFBLENBQU8sVUFBUCxFQUFrQixDQUFBLENBQWxCLEVBQTJDO0lBQUMsRUFBQSxFQUFHLEdBQUo7SUFBUyxJQUFBLEVBQUssY0FBZDtJQUE4QixJQUFBLEVBQUs7RUFBbkMsQ0FBM0M7RUFDTixNQUFNLE1BQUEsQ0FBTyxXQUFQLEVBQW1CLENBQUEsQ0FBbkIsRUFBMkM7SUFBQyxLQUFBLEVBQU0sR0FBUDtJQUFZLE9BQUEsRUFBUTtFQUFwQixDQUEzQztFQUNOLE1BQU0sR0FBQSxDQUFPLFdBQVAsRUFBbUIsQ0FBQSxDQUFuQixFQUEyQztJQUFDLEtBQUEsRUFBTSxHQUFQO0lBQVksT0FBQSxFQUFRO0VBQXBCLENBQTNDO0VBQ04sTUFBTSxLQUFBLENBQU8sV0FBUCxFQUFtQixDQUFBLENBQW5CLEVBQTJDO0lBQUMsS0FBQSxFQUFNLEdBQVA7SUFBWSxPQUFBLEVBQVE7RUFBcEIsQ0FBM0M7U0FDTixPQUFPLENBQUMsR0FBUixDQUFZLElBQUEsQ0FBQSxDQUFaO0FBbkJVOztBQXFCWCxRQUFBLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJ7cmVzdCwgUE9TVCxHRVQsUEFUQ0gsREVMRVRFfSA9IHJlcXVpcmUgJy4vdXRpbGl0aWVzJ1xyXG5cclxuY2hlY2tBbGwgPSAtPlxyXG5cdGNvbnNvbGUuY2xlYXIoKVxyXG5cdGF3YWl0IERFTEVURSAnL3RvZG9zJyx7fSwgICAgICAgICAgICAgICAgICAgICAgICBbXVxyXG5cdGF3YWl0IFBPU1QgICAnL3RvZG9zJyx7dGV4dDpcImJ1eSBmb29kXCJ9LCAgICAgICAgIHtpZDpcIjFcIiwgdGV4dDpcImJ1eSBmb29kXCIsIGRvbmU6ZmFsc2V9XHJcblx0YXdhaXQgR0VUICAgICcvdG9kb3MnLHt9LCAgICAgICAgICAgICAgICAgICAgICBcdCBbe2lkOlwiMVwiLCB0ZXh0OlwiYnV5IGZvb2RcIiwgZG9uZTpmYWxzZX1dXHJcblx0YXdhaXQgUE9TVCAgICcvdG9kb3MnLHt0ZXh0OlwiZmV0Y2ggbGFtcHNcIn0sICAgICAge2lkOlwiMlwiLCB0ZXh0OlwiZmV0Y2ggbGFtcHNcIiwgZG9uZTpmYWxzZX1cclxuXHRhd2FpdCBQT1NUICAgJy90b2Rvcycse3RleHQ6XCJ3YWxrIGRvZ1wifSwgICAgICAgICB7aWQ6XCIzXCIsIHRleHQ6XCJ3YWxrIGRvZ1wiLCBkb25lOmZhbHNlfVxyXG5cdGF3YWl0IFBPU1QgICAnL3RvZG9zJyx7dGV4dDpcImZlZWQgY2F0XCJ9LCAgICAgICAgIHtpZDpcIjRcIiwgdGV4dDpcImZlZWQgY2F0XCIsIGRvbmU6ZmFsc2V9XHJcblx0YXdhaXQgUE9TVCAgICcvdG9kb3MnLHt0ZXh0Olwia8O2cCByw6Rrc23DtnJnw6VzYXJcIn0sIHtpZDpcIjVcIiwgdGV4dDpcImvDtnAgcsOka3Ntw7ZyZ8Olc2FyXCIsIGRvbmU6ZmFsc2V9XHJcblx0YXdhaXQgR0VUICAgICcvdG9kb3MvMScse30sICAgICAgICAgICAgICAgICAgICAgIHtpZDpcIjFcIiwgdGV4dDpcImJ1eSBmb29kXCIsIGRvbmU6ZmFsc2V9XHJcblx0YXdhaXQgUE9TVCAgICcvdG9kb3MnLHt0ZXh0OidDdXQgdGhlIGdyYXNzJ30sICAgIHtpZDpcIjZcIiwgdGV4dDpcIkN1dCB0aGUgZ3Jhc3NcIiwgZG9uZTpmYWxzZX1cclxuXHRhd2FpdCBHRVQgICAgJy90b2Rvcy82Jyx7fSwgICAgICAgICAgICAgICAgICAgICAge2lkOlwiNlwiLCB0ZXh0OlwiQ3V0IHRoZSBncmFzc1wiLCBkb25lOmZhbHNlfVxyXG5cdGF3YWl0IFBBVENIICAnL3RvZG9zLzYnLHt0ZXh0OlwiS2xpcHAgZ3LDpHNldFwiLGRvbmU6dHJ1ZX0sIHtpZDpcIjZcIiwgdGV4dDpcIktsaXBwIGdyw6RzZXRcIiwgZG9uZTp0cnVlfVxyXG5cdGF3YWl0IFBBVENIICAnL3RvZG9zLzYnLHtkb25lOmZhbHNlfSwgICAgICAgICAgICB7aWQ6XCI2XCIsIHRleHQ6XCJLbGlwcCBncsOkc2V0XCIsIGRvbmU6ZmFsc2V9XHJcblx0YXdhaXQgUEFUQ0ggICcvdG9kb3MvNicse30sICAgICAgICAgICAgICAgICAgICAgIHtpZDpcIjZcIiwgdGV4dDpcIktsaXBwIGdyw6RzZXRcIiwgZG9uZTpmYWxzZX1cclxuXHRhd2FpdCBERUxFVEUgJy90b2Rvcy82Jyx7fSwgICAgICAgICAgICAgICAgICAgICAge2lkOlwiNlwiLCB0ZXh0OlwiS2xpcHAgZ3LDpHNldFwiLCBkb25lOmZhbHNlfVxyXG5cdGF3YWl0IERFTEVURSAnL3RvZG9zLzk5Jyx7fSwgICAgICAgICAgICAgICAgICAgICB7ZXJyb3I6NDA0LCBtZXNzYWdlOlwiaWQgOTkgZG9lcyBub3QgZXhpc3RcIn1cclxuXHRhd2FpdCBHRVQgICAgJy90b2Rvcy85OScse30sICAgICAgICAgICAgICAgICAgICAge2Vycm9yOjQwNCwgbWVzc2FnZTpcImlkIDk5IGRvZXMgbm90IGV4aXN0XCJ9XHJcblx0YXdhaXQgUEFUQ0ggICcvdG9kb3MvOTknLHt9LCAgICAgICAgICAgICAgICAgICAgIHtlcnJvcjo0MDQsIG1lc3NhZ2U6XCJpZCA5OSBkb2VzIG5vdCBleGlzdFwifVxyXG5cdGNvbnNvbGUubG9nIHJlc3QoKVxyXG5cclxuY2hlY2tBbGwoKVxyXG4iXX0=
//# sourceURL=c:\github\LiveShare\2019-09-26\coffee\assert.coffee