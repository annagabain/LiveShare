// Generated by CoffeeScript 2.4.1
var Curl, DELETE, GET, PATCH, POST, _, assert, chai, chalk, chalkDiff, check, curl, diffChars;

chai = require('chai');

_ = require('lodash');

chalk = require('chalk');

({diffChars} = require('diff'));

chalkDiff = (a, b) => {
  var result;
  result = diffChars(a, b).map((part) => {
    var s, v;
    v = part.value;
    s = chalk.rgb(180, 180, 180)(v);
    if (part.added) {
      s = chalk.green(v);
    }
    if (part.removed) {
      s = chalk.red(v);
    }
    return s;
  });
  return chalk.white(result.join(''));
};

//assert = chai.assert.deepEqual
assert = function(a, b) {
  var sa, sb;
  sa = JSON.stringify(a);
  sb = JSON.stringify(b);
  sa = sa.replace(/\\/g, '');
  sb = sb.replace(/\\/g, '');
  if (sa === sb) {
    return process.stderr.write('.');
  } else {
    return console.log('\n' + chalkDiff(sa, sb));
  }
};

Curl = require('curl-request');

curl = new Curl();

check = async function(url, body, expect, type) {
  var response;
  response = (await curl.setBody(body)[type]('localhost:3000' + url));
  //console.log type, expect
  //console.log 'body',response.body
  return assert(JSON.parse(response.body), expect);
};

POST = function() {
  return check(...arguments, 'post');
};

GET = function() {
  return check(...arguments, 'get');
};

PATCH = function() {
  return check(...arguments, 'patch');
};

DELETE = function() {
  return check(...arguments, 'delete');
};

module.exports = {assert, POST, GET, PATCH, DELETE};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbGl0aWVzLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXHV0aWxpdGllcy5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUEsSUFBQSxFQUFBLE1BQUEsRUFBQSxHQUFBLEVBQUEsS0FBQSxFQUFBLElBQUEsRUFBQSxDQUFBLEVBQUEsTUFBQSxFQUFBLElBQUEsRUFBQSxLQUFBLEVBQUEsU0FBQSxFQUFBLEtBQUEsRUFBQSxJQUFBLEVBQUE7O0FBQUEsSUFBQSxHQUFPLE9BQUEsQ0FBUSxNQUFSOztBQUNQLENBQUEsR0FBSSxPQUFBLENBQVEsUUFBUjs7QUFDSixLQUFBLEdBQVEsT0FBQSxDQUFRLE9BQVI7O0FBQ1IsQ0FBQSxDQUFFLFNBQUYsQ0FBQSxHQUFnQixPQUFBLENBQVEsTUFBUixDQUFoQjs7QUFFQSxTQUFBLEdBQVksQ0FBQyxDQUFELEVBQUcsQ0FBSCxDQUFBLEdBQUE7QUFDWCxNQUFBO0VBQUEsTUFBQSxHQUFTLFNBQUEsQ0FBVSxDQUFWLEVBQVksQ0FBWixDQUFjLENBQUMsR0FBZixDQUFtQixDQUFDLElBQUQsQ0FBQSxHQUFBO0FBQzNCLFFBQUEsQ0FBQSxFQUFBO0lBQUEsQ0FBQSxHQUFJLElBQUksQ0FBQztJQUNULENBQUEsR0FBSSxLQUFLLENBQUMsR0FBTixDQUFVLEdBQVYsRUFBZSxHQUFmLEVBQW9CLEdBQXBCLENBQUEsQ0FBeUIsQ0FBekI7SUFDSixJQUFHLElBQUksQ0FBQyxLQUFSO01BQW1CLENBQUEsR0FBSSxLQUFLLENBQUMsS0FBTixDQUFZLENBQVosRUFBdkI7O0lBQ0EsSUFBRyxJQUFJLENBQUMsT0FBUjtNQUFxQixDQUFBLEdBQUksS0FBSyxDQUFDLEdBQU4sQ0FBVSxDQUFWLEVBQXpCOztXQUNBO0VBTDJCLENBQW5CO1NBTVQsS0FBSyxDQUFDLEtBQU4sQ0FBWSxNQUFNLENBQUMsSUFBUCxDQUFZLEVBQVosQ0FBWjtBQVBXLEVBTFo7OztBQWVBLE1BQUEsR0FBUyxRQUFBLENBQUMsQ0FBRCxFQUFHLENBQUgsQ0FBQTtBQUNSLE1BQUEsRUFBQSxFQUFBO0VBQUEsRUFBQSxHQUFLLElBQUksQ0FBQyxTQUFMLENBQWUsQ0FBZjtFQUNMLEVBQUEsR0FBSyxJQUFJLENBQUMsU0FBTCxDQUFlLENBQWY7RUFDTCxFQUFBLEdBQUssRUFBRSxDQUFDLE9BQUgsQ0FBVyxLQUFYLEVBQWlCLEVBQWpCO0VBQ0wsRUFBQSxHQUFLLEVBQUUsQ0FBQyxPQUFILENBQVcsS0FBWCxFQUFpQixFQUFqQjtFQUVMLElBQUcsRUFBQSxLQUFNLEVBQVQ7V0FDQyxPQUFPLENBQUMsTUFBTSxDQUFDLEtBQWYsQ0FBcUIsR0FBckIsRUFERDtHQUFBLE1BQUE7V0FHQyxPQUFPLENBQUMsR0FBUixDQUFZLElBQUEsR0FBTyxTQUFBLENBQVUsRUFBVixFQUFhLEVBQWIsQ0FBbkIsRUFIRDs7QUFOUTs7QUFXVCxJQUFBLEdBQU8sT0FBQSxDQUFRLGNBQVI7O0FBRVAsSUFBQSxHQUFPLElBQUksSUFBSixDQUFBOztBQUVQLEtBQUEsR0FBUSxNQUFBLFFBQUEsQ0FBQyxHQUFELEVBQUssSUFBTCxFQUFVLE1BQVYsRUFBaUIsSUFBakIsQ0FBQTtBQUNQLE1BQUE7RUFBQSxRQUFBLEdBQVcsQ0FBQSxNQUFNLElBQUksQ0FBQyxPQUFMLENBQWEsSUFBYixDQUFtQixDQUFBLElBQUEsQ0FBbkIsQ0FBeUIsZ0JBQUEsR0FBbUIsR0FBNUMsQ0FBTixFQUFYOzs7U0FHQSxNQUFBLENBQU8sSUFBSSxDQUFDLEtBQUwsQ0FBVyxRQUFRLENBQUMsSUFBcEIsQ0FBUCxFQUFrQyxNQUFsQztBQUpPOztBQU1SLElBQUEsR0FBUyxRQUFBLENBQUEsQ0FBQTtTQUFHLEtBQUEsQ0FBTSxHQUFHLFNBQVQsRUFBb0IsTUFBcEI7QUFBSDs7QUFDVCxHQUFBLEdBQVMsUUFBQSxDQUFBLENBQUE7U0FBRyxLQUFBLENBQU0sR0FBRyxTQUFULEVBQW9CLEtBQXBCO0FBQUg7O0FBQ1QsS0FBQSxHQUFTLFFBQUEsQ0FBQSxDQUFBO1NBQUcsS0FBQSxDQUFNLEdBQUcsU0FBVCxFQUFvQixPQUFwQjtBQUFIOztBQUNULE1BQUEsR0FBUyxRQUFBLENBQUEsQ0FBQTtTQUFHLEtBQUEsQ0FBTSxHQUFHLFNBQVQsRUFBb0IsUUFBcEI7QUFBSDs7QUFFVCxNQUFNLENBQUMsT0FBUCxHQUFpQixDQUFDLE1BQUQsRUFBUSxJQUFSLEVBQWEsR0FBYixFQUFpQixLQUFqQixFQUF1QixNQUF2QiIsInNvdXJjZXNDb250ZW50IjpbImNoYWkgPSByZXF1aXJlICdjaGFpJ1xyXG5fID0gcmVxdWlyZSAnbG9kYXNoJ1xyXG5jaGFsayA9IHJlcXVpcmUgJ2NoYWxrJ1xyXG57IGRpZmZDaGFycyB9ID0gcmVxdWlyZSAnZGlmZidcclxuXHJcbmNoYWxrRGlmZiA9IChhLGIpID0+XHJcblx0cmVzdWx0ID0gZGlmZkNoYXJzKGEsYikubWFwIChwYXJ0KSA9PlxyXG5cdFx0diA9IHBhcnQudmFsdWVcclxuXHRcdHMgPSBjaGFsay5yZ2IoMTgwLCAxODAsIDE4MCkgdlx0XHRcclxuXHRcdGlmIHBhcnQuYWRkZWQgdGhlbiBzID0gY2hhbGsuZ3JlZW4gdlxyXG5cdFx0aWYgcGFydC5yZW1vdmVkIHRoZW4gcyA9IGNoYWxrLnJlZCB2XHJcblx0XHRzXHJcblx0Y2hhbGsud2hpdGUgcmVzdWx0LmpvaW4gJydcclxuXHJcbiNhc3NlcnQgPSBjaGFpLmFzc2VydC5kZWVwRXF1YWxcclxuYXNzZXJ0ID0gKGEsYikgLT5cclxuXHRzYSA9IEpTT04uc3RyaW5naWZ5IGFcclxuXHRzYiA9IEpTT04uc3RyaW5naWZ5IGJcclxuXHRzYSA9IHNhLnJlcGxhY2UgL1xcXFwvZywnJ1xyXG5cdHNiID0gc2IucmVwbGFjZSAvXFxcXC9nLCcnXHJcblxyXG5cdGlmIHNhID09IHNiIFxyXG5cdFx0cHJvY2Vzcy5zdGRlcnIud3JpdGUgJy4nXHJcblx0ZWxzZVxyXG5cdFx0Y29uc29sZS5sb2cgJ1xcbicgKyBjaGFsa0RpZmYgc2Esc2JcclxuXHJcbkN1cmwgPSByZXF1aXJlICdjdXJsLXJlcXVlc3QnXHJcblxyXG5jdXJsID0gbmV3IEN1cmwoKVxyXG5cclxuY2hlY2sgPSAodXJsLGJvZHksZXhwZWN0LHR5cGUpIC0+XHJcblx0cmVzcG9uc2UgPSBhd2FpdCBjdXJsLnNldEJvZHkoYm9keSlbdHlwZV0gJ2xvY2FsaG9zdDozMDAwJyArIHVybFxyXG5cdCNjb25zb2xlLmxvZyB0eXBlLCBleHBlY3RcclxuXHQjY29uc29sZS5sb2cgJ2JvZHknLHJlc3BvbnNlLmJvZHlcclxuXHRhc3NlcnQgSlNPTi5wYXJzZShyZXNwb25zZS5ib2R5KSwgZXhwZWN0XHJcblxyXG5QT1NUID0gICAtPlx0Y2hlY2sgLi4uYXJndW1lbnRzLCAncG9zdCdcclxuR0VUID0gICAgLT5cdGNoZWNrIC4uLmFyZ3VtZW50cywgJ2dldCdcclxuUEFUQ0ggPSAgLT5cdGNoZWNrIC4uLmFyZ3VtZW50cywgJ3BhdGNoJ1xyXG5ERUxFVEUgPSAtPlx0Y2hlY2sgLi4uYXJndW1lbnRzLCAnZGVsZXRlJ1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSB7YXNzZXJ0LFBPU1QsR0VULFBBVENILERFTEVURX1cclxuIl19
//# sourceURL=c:\github\LiveShare\2019-09-26\coffee\utilities.coffee