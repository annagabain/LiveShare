// Generated by CoffeeScript 2.4.1
var Curl, DELETE, GET, PATCH, POST, _, assert, chai, check, curl, okAsserts, rest;

chai = require('chai');

_ = require('lodash');

//assert = chai.assert.deepEqual
okAsserts = '';

assert = function(a, b) {
  var ch, diff, i, j, len, sa, sb;
  sa = JSON.stringify(a);
  sb = JSON.stringify(b);
  sa = sa.replace(/\\/g, '');
  sb = sb.replace(/\\/g, '');
  diff = '';
  for (i = j = 0, len = sa.length; j < len; i = ++j) {
    ch = sa[i];
    if (sa[i] === sb[i]) {
      diff += '='; // same character
    } else {
      diff += '!'; // different character
      break;
    }
  }
  if (diff.includes('!')) { // failed assert
    console.log(okAsserts);
    console.log(sa);
    console.log(diff);
    console.log(sb);
    return okAsserts = '';
  } else {
    return okAsserts += '.'; // ok assert
  }
};

rest = function() {
  return okAsserts;
};

Curl = require('curl-request');

curl = new Curl();

check = async function(url, body, expect, type) {
  var response;
  response = (await curl.setBody(body)[type]('localhost:3000' + url));
  //console.log type, expect
  //console.log 'body',response.body
  return assert(JSON.parse(response.body), expect);
};

POST = function() {
  return check(...arguments, 'post');
};

GET = function() {
  return check(...arguments, 'get');
};

PATCH = function() {
  return check(...arguments, 'patch');
};

DELETE = function() {
  return check(...arguments, 'delete');
};

module.exports = {assert, rest, POST, GET, PATCH, DELETE};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbGl0aWVzLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXHV0aWxpdGllcy5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUEsSUFBQSxFQUFBLE1BQUEsRUFBQSxHQUFBLEVBQUEsS0FBQSxFQUFBLElBQUEsRUFBQSxDQUFBLEVBQUEsTUFBQSxFQUFBLElBQUEsRUFBQSxLQUFBLEVBQUEsSUFBQSxFQUFBLFNBQUEsRUFBQTs7QUFBQSxJQUFBLEdBQU8sT0FBQSxDQUFRLE1BQVI7O0FBQ1AsQ0FBQSxHQUFJLE9BQUEsQ0FBUSxRQUFSLEVBREo7OztBQUdBLFNBQUEsR0FBWTs7QUFDWixNQUFBLEdBQVMsUUFBQSxDQUFDLENBQUQsRUFBRyxDQUFILENBQUE7QUFDUixNQUFBLEVBQUEsRUFBQSxJQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxHQUFBLEVBQUEsRUFBQSxFQUFBO0VBQUEsRUFBQSxHQUFLLElBQUksQ0FBQyxTQUFMLENBQWUsQ0FBZjtFQUNMLEVBQUEsR0FBSyxJQUFJLENBQUMsU0FBTCxDQUFlLENBQWY7RUFDTCxFQUFBLEdBQUssRUFBRSxDQUFDLE9BQUgsQ0FBVyxLQUFYLEVBQWlCLEVBQWpCO0VBQ0wsRUFBQSxHQUFLLEVBQUUsQ0FBQyxPQUFILENBQVcsS0FBWCxFQUFpQixFQUFqQjtFQUNMLElBQUEsR0FBTztFQUNQLEtBQUEsNENBQUE7O0lBQ0MsSUFBRyxFQUFHLENBQUEsQ0FBQSxDQUFILEtBQU8sRUFBRyxDQUFBLENBQUEsQ0FBYjtNQUNDLElBQUEsSUFBUSxJQURUO0tBQUEsTUFBQTtNQUdDLElBQUEsSUFBUSxJQUFSO0FBQ0EsWUFKRDs7RUFERDtFQU1BLElBQUcsSUFBSSxDQUFDLFFBQUwsQ0FBYyxHQUFkLENBQUg7SUFDQyxPQUFPLENBQUMsR0FBUixDQUFZLFNBQVo7SUFDQSxPQUFPLENBQUMsR0FBUixDQUFZLEVBQVo7SUFDQSxPQUFPLENBQUMsR0FBUixDQUFZLElBQVo7SUFDQSxPQUFPLENBQUMsR0FBUixDQUFZLEVBQVo7V0FDQSxTQUFBLEdBQVksR0FMYjtHQUFBLE1BQUE7V0FPQyxTQUFBLElBQWEsSUFQZDs7QUFaUTs7QUFxQlQsSUFBQSxHQUFPLFFBQUEsQ0FBQSxDQUFBO1NBQUc7QUFBSDs7QUFFUCxJQUFBLEdBQU8sT0FBQSxDQUFRLGNBQVI7O0FBRVAsSUFBQSxHQUFPLElBQUksSUFBSixDQUFBOztBQUVQLEtBQUEsR0FBUSxNQUFBLFFBQUEsQ0FBQyxHQUFELEVBQUssSUFBTCxFQUFVLE1BQVYsRUFBaUIsSUFBakIsQ0FBQTtBQUNQLE1BQUE7RUFBQSxRQUFBLEdBQVcsQ0FBQSxNQUFNLElBQUksQ0FBQyxPQUFMLENBQWEsSUFBYixDQUFtQixDQUFBLElBQUEsQ0FBbkIsQ0FBeUIsZ0JBQUEsR0FBbUIsR0FBNUMsQ0FBTixFQUFYOzs7U0FHQSxNQUFBLENBQU8sSUFBSSxDQUFDLEtBQUwsQ0FBVyxRQUFRLENBQUMsSUFBcEIsQ0FBUCxFQUFrQyxNQUFsQztBQUpPOztBQU1SLElBQUEsR0FBUyxRQUFBLENBQUEsQ0FBQTtTQUFHLEtBQUEsQ0FBTSxHQUFHLFNBQVQsRUFBb0IsTUFBcEI7QUFBSDs7QUFDVCxHQUFBLEdBQVMsUUFBQSxDQUFBLENBQUE7U0FBRyxLQUFBLENBQU0sR0FBRyxTQUFULEVBQW9CLEtBQXBCO0FBQUg7O0FBQ1QsS0FBQSxHQUFTLFFBQUEsQ0FBQSxDQUFBO1NBQUcsS0FBQSxDQUFNLEdBQUcsU0FBVCxFQUFvQixPQUFwQjtBQUFIOztBQUNULE1BQUEsR0FBUyxRQUFBLENBQUEsQ0FBQTtTQUFHLEtBQUEsQ0FBTSxHQUFHLFNBQVQsRUFBb0IsUUFBcEI7QUFBSDs7QUFFVCxNQUFNLENBQUMsT0FBUCxHQUFpQixDQUFDLE1BQUQsRUFBUSxJQUFSLEVBQWMsSUFBZCxFQUFtQixHQUFuQixFQUF1QixLQUF2QixFQUE2QixNQUE3QiIsInNvdXJjZXNDb250ZW50IjpbImNoYWkgPSByZXF1aXJlICdjaGFpJ1xyXG5fID0gcmVxdWlyZSAnbG9kYXNoJ1xyXG4jYXNzZXJ0ID0gY2hhaS5hc3NlcnQuZGVlcEVxdWFsXHJcbm9rQXNzZXJ0cyA9ICcnXHJcbmFzc2VydCA9IChhLGIpIC0+XHJcblx0c2EgPSBKU09OLnN0cmluZ2lmeSBhXHJcblx0c2IgPSBKU09OLnN0cmluZ2lmeSBiXHJcblx0c2EgPSBzYS5yZXBsYWNlIC9cXFxcL2csJydcclxuXHRzYiA9IHNiLnJlcGxhY2UgL1xcXFwvZywnJ1xyXG5cdGRpZmYgPSAnJ1xyXG5cdGZvciBjaCxpIGluIHNhXHJcblx0XHRpZiBzYVtpXT09c2JbaV1cclxuXHRcdFx0ZGlmZiArPSAnPScgIyBzYW1lIGNoYXJhY3RlclxyXG5cdFx0ZWxzZSBcclxuXHRcdFx0ZGlmZiArPSAnIScgIyBkaWZmZXJlbnQgY2hhcmFjdGVyXHJcblx0XHRcdGJyZWFrXHJcblx0aWYgZGlmZi5pbmNsdWRlcyAnIScgIyBmYWlsZWQgYXNzZXJ0XHJcblx0XHRjb25zb2xlLmxvZyBva0Fzc2VydHNcclxuXHRcdGNvbnNvbGUubG9nIHNhXHJcblx0XHRjb25zb2xlLmxvZyBkaWZmXHJcblx0XHRjb25zb2xlLmxvZyBzYlxyXG5cdFx0b2tBc3NlcnRzID0gJydcclxuXHRlbHNlIFxyXG5cdFx0b2tBc3NlcnRzICs9ICcuJyAjIG9rIGFzc2VydFxyXG5cclxucmVzdCA9IC0+IG9rQXNzZXJ0c1xyXG5cclxuQ3VybCA9IHJlcXVpcmUgJ2N1cmwtcmVxdWVzdCdcclxuXHJcbmN1cmwgPSBuZXcgQ3VybCgpXHJcblxyXG5jaGVjayA9ICh1cmwsYm9keSxleHBlY3QsdHlwZSkgLT5cclxuXHRyZXNwb25zZSA9IGF3YWl0IGN1cmwuc2V0Qm9keShib2R5KVt0eXBlXSAnbG9jYWxob3N0OjMwMDAnICsgdXJsXHJcblx0I2NvbnNvbGUubG9nIHR5cGUsIGV4cGVjdFxyXG5cdCNjb25zb2xlLmxvZyAnYm9keScscmVzcG9uc2UuYm9keVxyXG5cdGFzc2VydCBKU09OLnBhcnNlKHJlc3BvbnNlLmJvZHkpLCBleHBlY3RcclxuXHJcblBPU1QgPSAgIC0+XHRjaGVjayAuLi5hcmd1bWVudHMsICdwb3N0J1xyXG5HRVQgPSAgICAtPlx0Y2hlY2sgLi4uYXJndW1lbnRzLCAnZ2V0J1xyXG5QQVRDSCA9ICAtPlx0Y2hlY2sgLi4uYXJndW1lbnRzLCAncGF0Y2gnXHJcbkRFTEVURSA9IC0+XHRjaGVjayAuLi5hcmd1bWVudHMsICdkZWxldGUnXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHthc3NlcnQscmVzdCwgUE9TVCxHRVQsUEFUQ0gsREVMRVRFfVxyXG4iXX0=
//# sourceURL=c:\github\LiveShare\2019-09-26\coffee\utilities.coffee