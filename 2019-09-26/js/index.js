// Generated by CoffeeScript 2.4.1
var Database, PATH, PORT, app, db, express, last, readFileSync, writeFileSync;

({readFileSync, writeFileSync} = require('fs'));

({last} = require('lodash'));

PATH = 'db.txt';

express = require('express');

app = express();

app.use(express.urlencoded({
  extended: false // req.body
}));

Database = class Database { // todo = {id:"1", text:"Feed the Cat", done:false}
  constructor() {
    this.read();
  }

  read() {
    return Object.assign(this, JSON.parse(readFileSync(PATH, 'utf-8')));
  }

  write() {
    return writeFileSync(PATH, JSON.stringify(this));
  }

  post1(req, res) {
    var body;
    body = req.body;
    this.todos.push({
      id: `${++this.last}`,
      text: body.text,
      done: false
    });
    this.write();
    return res.send(last(this.todos));
  }

  get(req, res) {
    return res.send(this.todos);
  }

  get1(req, res) {
    var todo;
    todo = this.todos.find(function(todo) {
      return todo.id === req.params.id;
    });
    if (!todo) {
      return this.sendError404(req, res);
    }
    return res.send(todo);
  }

  patch1(req, res) {
    var todo;
    todo = this.todos.find(function(todo) {
      return todo.id === req.params.id;
    });
    if (!todo) {
      return this.sendError404(req, res);
    }
    if (req.body.text) {
      todo.text = req.body.text;
    }
    if (req.body.done) {
      todo.done = JSON.parse(req.body.done);
    }
    this.write();
    return res.send(todo);
  }

  delete(req, res) {
    this.last = 0;
    this.todos = [];
    this.write();
    return res.send(this.todos);
  }

  delete1(req, res) {
    var todo;
    todo = this.todos.find(function(todo) {
      return todo.id === req.params.id;
    });
    if (!todo) {
      return this.sendError404(req, res);
    }
    this.todos = this.todos.filter(function(todo) {
      return todo.id !== req.params.id;
    });
    this.write();
    return res.send(todo);
  }

  sendError404(req, res) {
    return res.status(404).send({
      error: 404,
      message: `id ${req.params.id} does not exist`
    });
  }

};

db = new Database();

app.post('/todos', function(req, res) {
  return db.post1(req, res);
});

app.get('/todos', function(req, res) {
  return db.get(req, res);
});

app.get('/todos/:id', function(req, res) {
  return db.get1(req, res);
});

app.patch('/todos/:id', function(req, res) {
  return db.patch1(req, res);
});

app.delete('/todos/:id', function(req, res) {
  return db.delete1(req, res);
});

app.delete('/todos', function(req, res) {
  return db.delete(req, res);
});

PORT = process.env.PORT || 3000;

app.listen(PORT, function() {
  return console.log(`Server started on port ${PORT}`);
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiLi4iLCJzb3VyY2VzIjpbImNvZmZlZVxcaW5kZXguY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxJQUFBLFFBQUEsRUFBQSxJQUFBLEVBQUEsSUFBQSxFQUFBLEdBQUEsRUFBQSxFQUFBLEVBQUEsT0FBQSxFQUFBLElBQUEsRUFBQSxZQUFBLEVBQUE7O0FBQUEsQ0FBQSxDQUFDLFlBQUQsRUFBZSxhQUFmLENBQUEsR0FBZ0MsT0FBQSxDQUFRLElBQVIsQ0FBaEM7O0FBQ0EsQ0FBQSxDQUFDLElBQUQsQ0FBQSxHQUFTLE9BQUEsQ0FBUSxRQUFSLENBQVQ7O0FBQ0EsSUFBQSxHQUFPOztBQUVQLE9BQUEsR0FBVSxPQUFBLENBQVEsU0FBUjs7QUFDVixHQUFBLEdBQU0sT0FBQSxDQUFBOztBQUNOLEdBQUcsQ0FBQyxHQUFKLENBQVEsT0FBTyxDQUFDLFVBQVIsQ0FBbUI7RUFBRSxRQUFBLEVBQVUsS0FBWjtBQUFBLENBQW5CLENBQVI7O0FBRU0sV0FBTixNQUFBLFNBQUEsQ0FBQTtFQUNDLFdBQWMsQ0FBQSxDQUFBO0lBQUcsSUFBQyxDQUFBLElBQUQsQ0FBQTtFQUFIOztFQUVkLElBQU8sQ0FBQSxDQUFBO1dBQUcsTUFBTSxDQUFDLE1BQVAsQ0FBYyxJQUFkLEVBQWlCLElBQUksQ0FBQyxLQUFMLENBQVcsWUFBQSxDQUFhLElBQWIsRUFBa0IsT0FBbEIsQ0FBWCxDQUFqQjtFQUFIOztFQUNQLEtBQVEsQ0FBQSxDQUFBO1dBQUcsYUFBQSxDQUFjLElBQWQsRUFBb0IsSUFBSSxDQUFDLFNBQUwsQ0FBZSxJQUFmLENBQXBCO0VBQUg7O0VBRVIsS0FBUSxDQUFDLEdBQUQsRUFBSyxHQUFMLENBQUE7QUFDUCxRQUFBO0lBQUEsSUFBQSxHQUFPLEdBQUcsQ0FBQztJQUNYLElBQUMsQ0FBQSxLQUFLLENBQUMsSUFBUCxDQUFZO01BQUMsRUFBQSxFQUFJLENBQUEsQ0FBQSxDQUFHLEVBQUUsSUFBQyxDQUFBLElB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LElBQTFCLENBQUEsQ0FBWjtBQUFILENBQWpCIiwic291cmNlc0NvbnRlbnQiOlsie3JlYWRGaWxlU3luYywgd3JpdGVGaWxlU3luY30gPSByZXF1aXJlICdmcydcclxue2xhc3R9ID0gcmVxdWlyZSAnbG9kYXNoJ1xyXG5QQVRIID0gJ2RiLnR4dCdcclxuXHJcbmV4cHJlc3MgPSByZXF1aXJlICdleHByZXNzJ1xyXG5hcHAgPSBleHByZXNzKClcclxuYXBwLnVzZSBleHByZXNzLnVybGVuY29kZWQgeyBleHRlbmRlZDogZmFsc2UgfSAjIHJlcS5ib2R5XHJcblxyXG5jbGFzcyBEYXRhYmFzZSAgICMgdG9kbyA9IHtpZDpcIjFcIiwgdGV4dDpcIkZlZWQgdGhlIENhdFwiLCBkb25lOmZhbHNlfVxyXG5cdGNvbnN0cnVjdG9yIDogLT4gQHJlYWQoKVxyXG5cclxuXHRyZWFkIDogLT4gT2JqZWN0LmFzc2lnbiBALCBKU09OLnBhcnNlIHJlYWRGaWxlU3luYyBQQVRILCd1dGYtOCdcclxuXHR3cml0ZSA6IC0+IHdyaXRlRmlsZVN5bmMgUEFUSCwgSlNPTi5zdHJpbmdpZnkgQFxyXG5cclxuXHRwb3N0MSA6IChyZXEscmVzKSAtPiBcclxuXHRcdGJvZHkgPSByZXEuYm9keVxyXG5cdFx0QHRvZG9zLnB1c2gge2lkOiBcIiN7KytAbGFzdH1cIiwgdGV4dDogYm9keS50ZXh0LCBkb25lOiBmYWxzZX1cclxuXHRcdEB3cml0ZSgpXHJcblx0XHRyZXMuc2VuZCBsYXN0IEB0b2Rvc1xyXG5cclxuXHRnZXQgIDogKHJlcSxyZXMpIC0+IHJlcy5zZW5kIEB0b2Rvc1xyXG5cdGdldDEgOiAocmVxLHJlcykgLT4gXHJcblx0XHR0b2RvID0gQHRvZG9zLmZpbmQgKHRvZG8pIC0+IHRvZG8uaWQgPT0gcmVxLnBhcmFtcy5pZFxyXG5cdFx0aWYgbm90IHRvZG8gdGhlbiByZXR1cm4gQHNlbmRFcnJvcjQwNCByZXEsIHJlc1xyXG5cdFx0cmVzLnNlbmQgdG9kb1xyXG5cclxuXHRwYXRjaDEgOiAocmVxLHJlcykgLT5cclxuXHRcdHRvZG8gPSBAdG9kb3MuZmluZCAodG9kbykgLT4gdG9kby5pZCA9PSByZXEucGFyYW1zLmlkXHJcblx0XHRpZiBub3QgdG9kbyB0aGVuIHJldHVybiBAc2VuZEVycm9yNDA0IHJlcSwgcmVzXHJcblx0XHRpZiByZXEuYm9keS50ZXh0IHRoZW4gdG9kby50ZXh0ID0gcmVxLmJvZHkudGV4dFxyXG5cdFx0aWYgcmVxLmJvZHkuZG9uZSB0aGVuIHRvZG8uZG9uZSA9IEpTT04ucGFyc2UgcmVxLmJvZHkuZG9uZVxyXG5cdFx0QHdyaXRlKClcclxuXHRcdHJlcy5zZW5kIHRvZG9cclxuXHJcblx0ZGVsZXRlIDogKHJlcSxyZXMpIC0+XHJcblx0XHRAbGFzdCA9IDBcclxuXHRcdEB0b2RvcyA9IFtdXHJcblx0XHRAd3JpdGUoKVxyXG5cdFx0cmVzLnNlbmQgQHRvZG9zXHJcblxyXG5cdGRlbGV0ZTEgOiAocmVxLHJlcykgLT5cclxuXHRcdHRvZG8gICA9IEB0b2Rvcy5maW5kICAgKHRvZG8pIC0+IHRvZG8uaWQgPT0gcmVxLnBhcmFtcy5pZFxyXG5cdFx0aWYgbm90IHRvZG8gdGhlbiByZXR1cm4gQHNlbmRFcnJvcjQwNCByZXEsIHJlc1xyXG5cdFx0QHRvZG9zID0gQHRvZG9zLmZpbHRlciAodG9kbykgLT4gdG9kby5pZCAhPSByZXEucGFyYW1zLmlkXHJcblx0XHRAd3JpdGUoKVxyXG5cdFx0cmVzLnNlbmQgdG9kb1xyXG5cclxuXHRzZW5kRXJyb3I0MDQgOiAocmVxLHJlcykgLT5cdHJlcy5zdGF0dXMoNDA0KS5zZW5kIHtlcnJvcjo0MDQsIG1lc3NhZ2U6XCJpZCAje3JlcS5wYXJhbXMuaWR9IGRvZXMgbm90IGV4aXN0XCJ9XHJcblxyXG5kYiA9IG5ldyBEYXRhYmFzZSgpXHJcblxyXG5hcHAucG9zdCAgICcvdG9kb3MnLCAgICAgKHJlcSwgcmVzKSAtPiBkYi5wb3N0MSAgIHJlcSxyZXMgXHJcbmFwcC5nZXQgICAgJy90b2RvcycsICAgICAocmVxLCByZXMpIC0+IGRiLmdldCAgICAgcmVxLHJlcyBcclxuYXBwLmdldCAgICAnL3RvZG9zLzppZCcsIChyZXEsIHJlcykgLT4gZGIuZ2V0MSAgICByZXEscmVzIFxyXG5hcHAucGF0Y2ggICcvdG9kb3MvOmlkJywgKHJlcSwgcmVzKSAtPiBkYi5wYXRjaDEgIHJlcSxyZXMgXHJcbmFwcC5kZWxldGUgJy90b2Rvcy86aWQnLCAocmVxLCByZXMpIC0+IGRiLmRlbGV0ZTEgcmVxLHJlcyBcclxuYXBwLmRlbGV0ZSAnL3RvZG9zJywgICAgIChyZXEsIHJlcykgLT4gZGIuZGVsZXRlICByZXEscmVzIFxyXG5cclxuUE9SVCA9IHByb2Nlc3MuZW52LlBPUlQgfHwgMzAwMFxyXG5hcHAubGlzdGVuIFBPUlQsIC0+IGNvbnNvbGUubG9nIFwiU2VydmVyIHN0YXJ0ZWQgb24gcG9ydCAje1BPUlR9XCIiXX0=
//# sourceURL=c:\github\LiveShare\2019-09-26\coffee\index.coffee