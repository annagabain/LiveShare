// Generated by CoffeeScript 2.4.1
var Database, PORT, _, app, db, express, fs;

fs = require('fs');

_ = require('lodash');

express = require('express');

app = express();

app.use(express.urlencoded({
  extended: false // req.body
}));

Database = class Database { // todo = {id:"1", text:"Feed the Cat", done:false}
  constructor(path) {
    this.path = path;
    this.read();
  }

  read() {
    return Object.assign(this, JSON.parse(fs.readFileSync(this.path, 'utf-8')));
  }

  write() {
    return fs.writeFileSync(this.path, JSON.stringify(this));
  }

  add(body) {
    this.todos.push({
      id: (++this.last).toString(),
      text: body.text,
      done: false
    });
    this.write();
    return _.last(this.todos);
  }

  clear() {
    this.last = 0;
    this.todos = [];
    this.write();
    return this.todos;
  }

  delete(id) {
    var result;
    result = this.todos.find(function(todo) {
      return todo.id === id;
    });
    this.todos = this.todos.filter(function(todo) {
      return todo.id !== id;
    });
    this.write();
    return result;
  }

  patch(id, body) {
    var todo;
    todo = this.todos.find(function(todo) {
      return todo.id === id;
    });
    if (body.text) {
      todo.text = body.text;
    }
    if (body.done) {
      todo.done = JSON.parse(body.done);
    }
    this.write();
    return todo;
  }

};

db = new Database('db.txt');

app.post('/todos', function(req, res) {
  return res.send(db.add(req.body));
});

app.get('/todos', function(req, res) {
  return res.send(db.todos);
});

app.get('/todos/:id', function(req, res) {
  return res.send(db.todos.find(function(todo) {
    return todo.id === req.params.id;
  }));
});

app.patch('/todos/:id', function(req, res) {
  return res.send(db.patch(req.params.id, req.body));
});

app.delete('/todos', function(req, res) {
  return res.send(db.clear());
});

app.delete('/todos/:id', function(req, res) {
  return res.send(db.delete(req.params.id));
});

PORT = process.env.PORT || 3000;

app.listen(PORT, function() {
  return console.log(`Server started on port ${PORT}`);
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiLi4iLCJzb3VyY2VzIjpbImNvZmZlZVxcaW5kZXguY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxJQUFBLFFBQUEsRUFBQSxJQUFBLEVBQUEsQ0FBQSxFQUFBLEdBQUEsRUFBQSxFQUFBLEVBQUEsT0FBQSxFQUFBOztBQUFBLEVBQUEsR0FBSyxPQUFBLENBQVEsSUFBUjs7QUFDTCxDQUFBLEdBQUksT0FBQSxDQUFRLFFBQVI7O0FBRUosT0FBQSxHQUFVLE9BQUEsQ0FBUSxTQUFSOztBQUNWLEdBQUEsR0FBTSxPQUFBLENBQUE7O0FBQ04sR0FBRyxDQUFDLEdBQUosQ0FBUSxPQUFPLENBQUMsVUFBUixDQUFtQjtFQUFFLFFBQUEsRUFBVSxLQUFaO0FBQUEsQ0FBbkIsQ0FBUjs7QUFFTSxXQUFOLE1BQUEsU0FBQSxDQUFBO0VBQ0MsV0FBYyxLQUFBLENBQUE7SUFBQyxJQUFDLENBQUE7SUFBUyxJQUFDLENBQUEsSUFBRCxDQUFBO0VBQVg7O0VBRWQsSUFBTyxDQUFBLENBQUE7V0FBRyxNQUFNLENBQUMsTUFBUCxDQUFjLElBQWQsRUFBaUIsSUFBSSxDQUFDLEtBQUwsQ0FBVyxFQUFFLENBQUMsWUFBSCxDQUFnQixJQUFDLENBQUEsSUFBakIsRUFBc0IsT0FBdEIsQ0FBWCxDQUFqQjtFQUFIOztFQUNQLEtBQVEsQ0FBQSxDQUFBO1dBQUcsRUFBRSxDQUFDLGFBQUgsQ0FBaUIsSUFBQyxDQUFBLElBQWxCLEVBQXdCLElBQUksQ0FBQyxTQUFMLENBQWUsSUFBZixDQUF4QjtFQUFIOztFQUVSLEdBQU0sQ0FBQyxJQUFELENBQUE7SUFDTCxJQUFDLENBQUEsS0FBSyxDQUFDLElBQVAsQ0FBWTtNQUFDLEVBQUEsRUFBSSxDQUFDLEVBQUUsSUFBQyxDQUFBLElBQUosQ0FBUyxDQUFDLFFBQVYsQ0FBQSxDQUFMO01BQTJCLElBQUEsRUFBTSxJQUFJLENBQUMsSUFBdEM7TUFBNEMsSUFBQSxFQUFNO0lBQWxELENB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QUFBLEdBQU8sT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFaLElBQW9COztBQUMzQixHQUFHLENBQUMsTUFBSixDQUFXLElBQVgsRUFBaUIsUUFBQSxDQUFBLENBQUE7U0FBRyxPQUFPLENBQUMsR0FBUixDQUFZLENBQUEsdUJBQUEsQ0FBQSxDQUEwQixJQUExQixDQUFBLENBQVo7QUFBSCxDQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImZzID0gcmVxdWlyZSAnZnMnXHJcbl8gPSByZXF1aXJlICdsb2Rhc2gnXHJcblxyXG5leHByZXNzID0gcmVxdWlyZSAnZXhwcmVzcydcclxuYXBwID0gZXhwcmVzcygpXHJcbmFwcC51c2UgZXhwcmVzcy51cmxlbmNvZGVkIHsgZXh0ZW5kZWQ6IGZhbHNlIH0gIyByZXEuYm9keVxyXG5cclxuY2xhc3MgRGF0YWJhc2UgICAjIHRvZG8gPSB7aWQ6XCIxXCIsIHRleHQ6XCJGZWVkIHRoZSBDYXRcIiwgZG9uZTpmYWxzZX1cclxuXHRjb25zdHJ1Y3RvciA6IChAcGF0aCkgLT4gQHJlYWQoKVxyXG5cclxuXHRyZWFkIDogLT4gT2JqZWN0LmFzc2lnbiBALCBKU09OLnBhcnNlIGZzLnJlYWRGaWxlU3luYyBAcGF0aCwndXRmLTgnXHJcblx0d3JpdGUgOiAtPiBmcy53cml0ZUZpbGVTeW5jIEBwYXRoLCBKU09OLnN0cmluZ2lmeSBAXHJcblxyXG5cdGFkZCA6IChib2R5KSAtPiBcclxuXHRcdEB0b2Rvcy5wdXNoIHtpZDogKCsrQGxhc3QpLnRvU3RyaW5nKCksIHRleHQ6IGJvZHkudGV4dCwgZG9uZTogZmFsc2V9XHJcblx0XHRAd3JpdGUoKVxyXG5cdFx0Xy5sYXN0IEB0b2Rvc1xyXG5cclxuXHRjbGVhciA6IC0+XHJcblx0XHRAbGFzdCA9IDBcclxuXHRcdEB0b2RvcyA9IFtdXHJcblx0XHRAd3JpdGUoKVxyXG5cdFx0QHRvZG9zXHJcblxyXG5cdGRlbGV0ZSA6IChpZCkgLT5cclxuXHRcdHJlc3VsdCA9IEB0b2Rvcy5maW5kICh0b2RvKSAtPiB0b2RvLmlkID09IGlkXHJcblx0XHRAdG9kb3MgPSBAdG9kb3MuZmlsdGVyICh0b2RvKSAtPiB0b2RvLmlkICE9IGlkXHJcblx0XHRAd3JpdGUoKVxyXG5cdFx0cmVzdWx0XHJcblxyXG5cdHBhdGNoIDogKGlkLGJvZHkpIC0+XHJcblx0XHR0b2RvID0gQHRvZG9zLmZpbmQgKHRvZG8pIC0+IHRvZG8uaWQgPT0gaWRcclxuXHRcdGlmIGJvZHkudGV4dCB0aGVuIHRvZG8udGV4dCA9IGJvZHkudGV4dFxyXG5cdFx0aWYgYm9keS5kb25lIHRoZW4gdG9kby5kb25lID0gSlNPTi5wYXJzZSBib2R5LmRvbmVcclxuXHRcdEB3cml0ZSgpXHJcblx0XHR0b2RvXHJcblxyXG5kYiA9IG5ldyBEYXRhYmFzZSAnZGIudHh0J1xyXG5cclxuYXBwLnBvc3QgICAnL3RvZG9zJywgICAgIChyZXEsIHJlcykgLT4gcmVzLnNlbmQgZGIuYWRkIHJlcS5ib2R5XHJcbmFwcC5nZXQgICAgJy90b2RvcycsICAgICAocmVxLCByZXMpIC0+IHJlcy5zZW5kIGRiLnRvZG9zXHJcbmFwcC5nZXQgICAgJy90b2Rvcy86aWQnLCAocmVxLCByZXMpIC0+IHJlcy5zZW5kIGRiLnRvZG9zLmZpbmQgKHRvZG8pIC0+IHRvZG8uaWQgPT0gcmVxLnBhcmFtcy5pZFxyXG5hcHAucGF0Y2ggICcvdG9kb3MvOmlkJywgKHJlcSwgcmVzKSAtPiByZXMuc2VuZCBkYi5wYXRjaCAgcmVxLnBhcmFtcy5pZCwgcmVxLmJvZHlcclxuYXBwLmRlbGV0ZSAnL3RvZG9zJywgICAgIChyZXEsIHJlcykgLT4gcmVzLnNlbmQgZGIuY2xlYXIoKVxyXG5hcHAuZGVsZXRlICcvdG9kb3MvOmlkJywgKHJlcSwgcmVzKSAtPiByZXMuc2VuZCBkYi5kZWxldGUgcmVxLnBhcmFtcy5pZFxyXG5cclxuUE9SVCA9IHByb2Nlc3MuZW52LlBPUlQgfHwgMzAwMFxyXG5hcHAubGlzdGVuIFBPUlQsIC0+IGNvbnNvbGUubG9nIFwiU2VydmVyIHN0YXJ0ZWQgb24gcG9ydCAje1BPUlR9XCIiXX0=
//# sourceURL=c:\github\LiveShare\2019-09-26\coffee\index.coffee