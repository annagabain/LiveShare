// Generated by CoffeeScript 2.4.1
var STYLE1, calc, div, exec, h1, input, onkeyup, render, renderable, stack;

({div, h1, renderable, input} = teacup);

STYLE1 = 'font-family:Courier New;font-size:30px';

stack = [];

render = renderable(function() {
  return div({
    style: STYLE1
  }, function() {
    var i, item, len;
    for (i = 0, len = stack.length; i < len; i++) {
      item = stack[i];
      h1(item);
    }
    return input({
      id: 'x',
      type: "text",
      name: "nr",
      onkeyup: onkeyup,
      style: STYLE1
    });
  });
});

calc = function(cmd) {
  var nr;
  if (cmd === '+') {
    return stack.push(stack.pop() + stack.pop());
  } else {
    nr = parseFloat(cmd);
    if (!isNaN(nr)) {
      return stack.push(nr);
    }
  }
};

onkeyup = (evt) => {
  var cmd, i, len, ref;
  if (evt.key === 'Enter') {
    ref = evt.target.value.split(' ');
    for (i = 0, len = ref.length; i < len; i++) {
      cmd = ref[i];
      calc(cmd);
    }
    evt.target.value = '';
    root.innerHTML = render();
    return x.focus();
  }
};

root.innerHTML = render();

exec = function(expected, cmds) {
  var cmd, i, len, ref;
  stack = [];
  ref = cmds.split(' ');
  for (i = 0, len = ref.length; i < len; i++) {
    cmd = ref[i];
    calc(cmd);
  }
  return assert(expected, stack, cmds);
};

exec([5], '2 3 +');

exec([7], '2 1 4 + +');

exec([7], '2 1 + 4 +');

exec([9], '4 5 +');

exec([20], '4 5 *');

exec([0.8], '4 5 /');

exec([-1], '4 5 -');

exec([-23], '23 chs');

exec([23], '-23 chs');

exec([0.2], '5 1/x');

exec([25], '5 x^2');

exec([5], '25 sqrt');

exec([0.7071067811865475], '45 sin');

exec([1, 2, 3, 4], '1 2 3 4 5 drop');

exec([1, 2, 4, 3], '1 2 3 4 swap');

exec([1000], '3 10^x');

exec([3], '1000 log');

exec([6.907755278982137], '1000 ln');

exec([999.9999999999998], '6.907755278982137 exp');

exec([9], '3 2 y^x');

exec([8], '2 3 y^x');

exec([2], '-2 abs');

exec([2], '2 abs');

exec([9.42477796076938], 'pi pi pi + +');

exec([9.869604401089358], 'pi pi *');

exec([7.3890560989306495], 'e 2 y^x');

exec([5], '3 4 pyth'); // hypothenuse

exec([13], '5 12 pyth'); // hypothenuse 25+144 = 169 = 13*13

assertReady();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiLi4iLCJzb3VyY2VzIjpbImNvZmZlZVxcaW5kZXguY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxJQUFBLE1BQUEsRUFBQSxJQUFBLEVBQUEsR0FBQSxFQUFBLElBQUEsRUFBQSxFQUFBLEVBQUEsS0FBQSxFQUFBLE9BQUEsRUFBQSxNQUFBLEVBQUEsVUFBQSxFQUFBOztBQUFBLENBQUEsQ0FBQyxHQUFELEVBQU0sRUFBTixFQUFVLFVBQVYsRUFBc0IsS0FBdEIsQ0FBQSxHQUErQixNQUEvQjs7QUFFQSxNQUFBLEdBQVM7O0FBRVQsS0FBQSxHQUFROztBQUVSLE1BQUEsR0FBUyxVQUFBLENBQVcsUUFBQSxDQUFBLENBQUE7U0FDbkIsR0FBQSxDQUFJO0lBQUEsS0FBQSxFQUFNO0VBQU4sQ0FBSixFQUFrQixRQUFBLENBQUEsQ0FBQTtBQUNqQixRQUFBLENBQUEsRUFBQSxJQUFBLEVBQUE7SUFBQSxLQUFBLHVDQUFBOztNQUNDLEVBQUEsQ0FBRyxJQUFIO0lBREQ7V0FFQSxLQUFBLENBQU07TUFBQSxFQUFBLEVBQUcsR0FBSDtNQUFRLElBQUEsRUFBSyxNQUFiO01BQXFCLElBQUEsRUFBSyxJQUExQjtNQUFnQyxPQUFBLEVBQVEsT0FBeEM7TUFBaUQsS0FBQSxFQUFNO0lBQXZELENBQU47RUFIaUIsQ0FBbEI7QUFEbUIsQ0FBWDs7QUFNVCxJQUFBLEdBQU8sUUFBQSxDQUFDLEdBQUQsQ0FBQTtBQUNOLE1BQUE7RUFBQSxJQUFHLEdBQUEsS0FBTyxHQUFWO1dBQW1CLEtBQUssQ0FBQyxJQUFOLENBQVcsS0FBSyxDQUFDLEdBQU4sQ0FBQSxDQUFBLEdBQWMsS0FBSyxDQUFDLEdBQU4sQ0FBQSxDQUF6QixFQUFuQjtHQUFBLE1BQUE7SUFFQyxFQUFBLEdBQUssVUFBQSxDQUFXLEdBQVg7SUFDTCxJQUFHLENBQUksS0FBQSxDQUFNLEVBQU4sQ0FBUDthQUFxQixLQUFLLENBQUMsSUFBTixDQUFXLEVBQVgs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c0NvbnRlbnQiOlsie2RpdiwgaDEsIHJlbmRlcmFibGUsIGlucHV0fSA9IHRlYWN1cFxyXG5cclxuU1RZTEUxID0gJ2ZvbnQtZmFtaWx5OkNvdXJpZXIgTmV3O2ZvbnQtc2l6ZTozMHB4J1xyXG5cclxuc3RhY2sgPSBbXVxyXG5cclxucmVuZGVyID0gcmVuZGVyYWJsZSAoKSAtPlxyXG5cdGRpdiBzdHlsZTpTVFlMRTEsIC0+XHJcblx0XHRmb3IgaXRlbSBpbiBzdGFja1xyXG5cdFx0XHRoMSBpdGVtXHJcblx0XHRpbnB1dCBpZDoneCcsIHR5cGU6XCJ0ZXh0XCIsIG5hbWU6XCJuclwiLCBvbmtleXVwOm9ua2V5dXAsIHN0eWxlOlNUWUxFMVxyXG5cclxuY2FsYyA9IChjbWQpIC0+XHJcblx0aWYgY21kID09ICcrJyB0aGVuIHN0YWNrLnB1c2ggc3RhY2sucG9wKCkgKyBzdGFjay5wb3AoKVxyXG5cdGVsc2UgXHJcblx0XHRuciA9IHBhcnNlRmxvYXQgY21kXHJcblx0XHRpZiBub3QgaXNOYU4gbnIgdGhlbiBzdGFjay5wdXNoIG5yXHJcblxyXG5vbmtleXVwID0gKGV2dCkgPT5cclxuXHRpZiBldnQua2V5ID09ICdFbnRlcidcclxuXHRcdGNhbGMgY21kIGZvciBjbWQgaW4gZXZ0LnRhcmdldC52YWx1ZS5zcGxpdCAnICdcclxuXHRcdGV2dC50YXJnZXQudmFsdWUgPSAnJ1xyXG5cdFx0cm9vdC5pbm5lckhUTUwgPSByZW5kZXIoKVxyXG5cdFx0eC5mb2N1cygpXHJcblxyXG5yb290LmlubmVySFRNTCA9IHJlbmRlcigpXHJcblxyXG5leGVjID0gKGV4cGVjdGVkLCBjbWRzKSAtPlxyXG5cdHN0YWNrID0gW11cclxuXHRjYWxjIGNtZCBmb3IgY21kIGluIGNtZHMuc3BsaXQgJyAnXHJcblx0YXNzZXJ0IGV4cGVjdGVkLCBzdGFjaywgY21kc1xyXG5cclxuZXhlYyBbNV0sICcyIDMgKydcclxuZXhlYyBbN10sICcyIDEgNCArICsnXHJcbmV4ZWMgWzddLCAnMiAxICsgNCArJ1xyXG5leGVjIFs5XSwgJzQgNSArJ1xyXG5leGVjIFsyMF0sICc0IDUgKidcclxuZXhlYyBbMC44XSwgJzQgNSAvJ1xyXG5leGVjIFstMV0sICc0IDUgLSdcclxuZXhlYyBbLTIzXSwgJzIzIGNocydcclxuZXhlYyBbMjNdLCAnLTIzIGNocydcclxuZXhlYyBbMC4yXSwgJzUgMS94J1xyXG5leGVjIFsyNV0sICc1IHheMidcclxuZXhlYyBbNV0sICcyNSBzcXJ0J1xyXG5leGVjIFswLjcwNzEwNjc4MTE4NjU0NzVdLCAnNDUgc2luJ1xyXG5leGVjIFsxLDIsMyw0XSwgJzEgMiAzIDQgNSBkcm9wJ1xyXG5leGVjIFsxLDIsNCwzXSwgJzEgMiAzIDQgc3dhcCdcclxuXHJcbmV4ZWMgWzEwMDBdLCAnMyAxMF54J1xyXG5leGVjIFszXSwgJzEwMDAgbG9nJ1xyXG5cclxuZXhlYyBbNi45MDc3NTUyNzg5ODIxMzddLCAnMTAwMCBsbidcclxuZXhlYyBbOTk5Ljk5OTk5OTk5OTk5OThdLCAnNi45MDc3NTUyNzg5ODIxMzcgZXhwJ1xyXG5cclxuZXhlYyBbOV0sICczIDIgeV54J1xyXG5leGVjIFs4XSwgJzIgMyB5XngnXHJcbmV4ZWMgWzJdLCAnLTIgYWJzJ1xyXG5leGVjIFsyXSwgJzIgYWJzJ1xyXG5leGVjIFs5LjQyNDc3Nzk2MDc2OTM4XSwgJ3BpIHBpIHBpICsgKydcclxuZXhlYyBbOS44Njk2MDQ0MDEwODkzNThdLCAncGkgcGkgKidcclxuZXhlYyBbNy4zODkwNTYwOTg5MzA2NDk1XSwgJ2UgMiB5XngnXHJcbmV4ZWMgWzVdLCAnMyA0IHB5dGgnICMgaHlwb3RoZW51c2VcclxuZXhlYyBbMTNdLCAnNSAxMiBweXRoJyAjIGh5cG90aGVudXNlIDI1KzE0NCA9IDE2OSA9IDEzKjEzXHJcblxyXG5hc3NlcnRSZWFkeSgpIl19
//# sourceURL=c:\github\LiveShare\2019-10-08\coffee\index.coffee