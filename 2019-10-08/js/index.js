// Generated by CoffeeScript 2.4.1
var calc, div, exec, h1, input, onkeyup, par0, par1, par2, render, renderable, stack,
  indexOf = [].indexOf;

({div, h1, renderable, input} = teacup);

stack = [];

par0 = {};

par0['drop'] = function() {
  return stack.pop();
};

par0['pi'] = function() {
  return stack.push(Math.PI);
};

par0['e'] = function() {
  return stack.push(Math.E);
};

par0['swap'] = function() {
  var a, b;
  a = stack.pop();
  b = stack.pop();
  stack.push(a);
  return stack.push(b);
};

par1 = {};

par1['abs'] = function(x) {
  return Math.abs(x);
};

par1['x^2'] = function(x) {
  return x * x;
};

par1['10^x'] = function(x) {
  return 10 ** x;
};

par1['log'] = function(x) {
  return Math.log10(x);
};

par1['exp'] = function(x) {
  return Math.exp(x);
};

par1['ln'] = function(x) {
  return Math.log(x);
};

par1['sqrt'] = function(x) {
  return Math.sqrt(x);
};

par1['chs'] = function(x) {
  return -x;
};

par1['1/x'] = function(x) {
  return 1 / x;
};

par1['sin'] = function(x) {
  return Math.sin(x / 180 * Math.PI);
};

par2 = {};

par2['+'] = function(x, y) {
  return y + x;
};

par2['*'] = function(x, y) {
  return y * x;
};

par2['-'] = function(x, y) {
  return y - x;
};

par2['/'] = function(x, y) {
  return y / x;
};

par2['y^x'] = function(x, y) {
  return y ** x;
};

par2['pyth'] = function(x, y) {
  return Math.sqrt(x * x + y * y);
};

render = renderable(function() {
  return div({
    style: 'font-family:Courier New;font-size:30px'
  }, function() {
    var i, item, len;
    div(_.keys(par0).join(' '));
    div(_.keys(par1).join(' '));
    div(_.keys(par2).join(' '));
    for (i = 0, len = stack.length; i < len; i++) {
      item = stack[i];
      h1(item);
    }
    return input({
      id: 'x',
      type: "text",
      name: "nr",
      onkeyup: onkeyup,
      style: 'font-family:Courier New;font-size:30px'
    });
  });
});

calc = function(cmd) {
  var nr;
  if (indexOf.call(_.keys(par0), cmd) >= 0) {
    return par0[cmd]();
  } else if (indexOf.call(_.keys(par1), cmd) >= 0) {
    return stack.push(par1[cmd](stack.pop()));
  } else if (indexOf.call(_.keys(par2), cmd) >= 0) {
    return stack.push(par2[cmd](stack.pop(), stack.pop()));
  } else {
    nr = parseFloat(cmd);
    if (!isNaN(nr)) {
      return stack.push(nr);
    }
  }
};

onkeyup = (evt) => {
  var cmd, i, len, ref;
  if (evt.key === 'Enter') {
    if (evt.target.value === '') {
      stack.push(_.last(stack));
    } else {
      ref = evt.target.value.split(' ');
      for (i = 0, len = ref.length; i < len; i++) {
        cmd = ref[i];
        calc(cmd);
      }
    }
    evt.target.value = '';
    root.innerHTML = render();
    return x.focus();
  }
};

root.innerHTML = render();

exec = function(expected, cmds) {
  var cmd, i, len, ref;
  stack = [];
  ref = cmds.split(' ');
  for (i = 0, len = ref.length; i < len; i++) {
    cmd = ref[i];
    calc(cmd);
  }
  return assert(expected, stack, cmds);
};

exec([5], '2 3 +');

exec([7], '2 1 4 + +');

exec([7], '2 1 + 4 +');

exec([9], '4 5 +');

exec([20], '4 5 *');

exec([0.8], '4 5 /');

exec([-1], '4 5 -');

exec([-23], '23 chs');

exec([23], '-23 chs');

exec([0.2], '5 1/x');

exec([25], '5 x^2');

exec([5], '25 sqrt');

exec([0.7071067811865475], '45 sin');

exec([1, 2, 3, 4], '1 2 3 4 5 drop');

exec([1, 2, 4, 3], '1 2 3 4 swap');

exec([1000], '3 10^x');

exec([3], '1000 log');

exec([6.907755278982137], '1000 ln');

exec([999.9999999999998], '6.907755278982137 exp');

exec([9], '3 2 y^x');

exec([8], '2 3 y^x');

exec([2], '-2 abs');

exec([2], '2 abs');

exec([9.42477796076938], 'pi pi pi + +');

exec([9.869604401089358], 'pi pi *');

exec([7.3890560989306495], 'e 2 y^x');

exec([5], '3 4 pyth'); // hypothenuse

exec([13], '5 12 pyth'); // hypothenuse 25+144 = 169 = 13*13

assertReady();

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=c:\github\LiveShare\2019-10-08\coffee\index.coffee