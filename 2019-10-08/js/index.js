// Generated by CoffeeScript 2.4.1
var calc, div, exec, h1, input, onkeyup, render, renderable, stack;

({div, h1, renderable, input} = teacup);

stack = [];

render = renderable(function() {
  return div({
    style: 'font-family:Courier New;font-size:30px'
  }, function() {
    var i, item, len;
    for (i = 0, len = stack.length; i < len; i++) {
      item = stack[i];
      h1(item);
    }
    return input({
      id: 'x',
      type: "text",
      name: "nr",
      onkeyup: onkeyup,
      style: 'font-family:Courier New;font-size:30px'
    });
  });
});

calc = function(cmd) {
  var nr;
  if (cmd === '+') {
    return stack.push(stack.pop() + stack.pop());
  } else {
    nr = parseFloat(cmd);
    if (!isNaN(nr)) {
      return stack.push(nr);
    }
  }
};

onkeyup = (evt) => {
  var cmd, i, len, ref;
  if (evt.key === 'Enter') {
    ref = evt.target.value.split(' ');
    for (i = 0, len = ref.length; i < len; i++) {
      cmd = ref[i];
      calc(cmd);
    }
    evt.target.value = '';
    root.innerHTML = render();
    return x.focus();
  }
};

root.innerHTML = render();

exec = function(cmds) {
  var cmd, i, len, ref;
  stack = [];
  ref = cmds.split(' ');
  for (i = 0, len = ref.length; i < len; i++) {
    cmd = ref[i];
    calc(cmd);
  }
  return stack;
};

assert([5], exec('2 3 +'));

assert([7], exec('2 1 4 + +'));

assert([9], exec('4 5 +'));

assert([20], exec('4 5 *'));

assert([0.8], exec('4 5 /'));

assert([-1], exec('4 5 -'));

assert([-23], exec('23 chs'));

assert([0.2], exec('5 1/x'));

assert([0.7071067811865475], exec('45 sin'));

assert([1, 2, 3, 4], exec('1 2 3 4 5 drop'));

assert([1, 2, 4, 3], exec('1 2 3 4 swap'));

assertReady();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiLi4iLCJzb3VyY2VzIjpbImNvZmZlZVxcaW5kZXguY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxJQUFBLElBQUEsRUFBQSxHQUFBLEVBQUEsSUFBQSxFQUFBLEVBQUEsRUFBQSxLQUFBLEVBQUEsT0FBQSxFQUFBLE1BQUEsRUFBQSxVQUFBLEVBQUE7O0FBQUEsQ0FBQSxDQUFDLEdBQUQsRUFBTSxFQUFOLEVBQVUsVUFBVixFQUFzQixLQUF0QixDQUFBLEdBQStCLE1BQS9COztBQUVBLEtBQUEsR0FBUTs7QUFFUixNQUFBLEdBQVMsVUFBQSxDQUFXLFFBQUEsQ0FBQSxDQUFBO1NBQ25CLEdBQUEsQ0FBSTtJQUFBLEtBQUEsRUFBTTtFQUFOLENBQUosRUFBb0QsUUFBQSxDQUFBLENBQUE7QUFDbkQsUUFBQSxDQUFBLEVBQUEsSUFBQSxFQUFBO0lBQUEsS0FBQSx1Q0FBQTs7TUFDQyxFQUFBLENBQUcsSUFBSDtJQUREO1dBRUEsS0FBQSxDQUFNO01BQUEsRUFBQSxFQUFHLEdBQUg7TUFBUSxJQUFBLEVBQUssTUFBYjtNQUFxQixJQUFBLEVBQUssSUFBMUI7TUFBZ0MsT0FBQSxFQUFRLE9BQXhDO01BQWlELEtBQUEsRUFBTTtJQUF2RCxDQUFOO0VBSG1ELENBQXBEO0FBRG1CLENBQVg7O0FBTVQsSUFBQSxHQUFPLFFBQUEsQ0FBQyxHQUFELENBQUE7QUFDTixNQUFBO0VBQUEsSUFBRyxHQUFBLEtBQU8sR0FBVjtXQUFtQixLQUFLLENBQUMsSUFBTixDQUFXLEtBQUssQ0FBQyxHQUFOLENBQUEsQ0FBQSxHQUFjLEtBQUssQ0FBQyxHQUFOLENBQUEsQ0FBekIsRUFBbkI7R0FBQSxNQUFBO0lBRUMsRUFBQSxHQUFLLFVBQUEsQ0FBVyxHQUFYO0lBQ0wsSUFBRyxDQUFJLEtBQUEsQ0FBTSxFQUFOLENBQVA7YUFBcUIsS0FBSyxDQUFDLElBQU4sQ0FBVyxFQUFYLEVBQXJCO0tBSEQ7O0FBRE07O0FBTVAsT0FBQSxHQUFVLENBQUMsR0FBRCxDQUFBLEdBQUE7QUFDVCxNQUFBLEdBQUEsRUFBQSxDQUFBLEVBQUEsR0FBQSxFQUFBO0VBQUEsSUFBRyxHQUFHLENBQUMsR0FBSixLQUFXLE9BQWQ7QUFDVTtJQUFBLEtBQUEscUNBQUE7O01BQVQsSUFBQSxDQUFLLEdBQUw7SUFBUztJQUNULEdBQUcsQ0FBQyxNQUFNLENBQUMsS0FBWCxHQUFtQjtJQUNuQixJQUFJLENBQUMsU0FBTCxHQUFpQixNQUFBLENBQUE7V0FDakIsQ0FBQyxDQUFDLEtBQUYsQ0FBQSxFQUpEOztBQURTOztBQU9WLElBQUksQ0FBQyxTQUFMLEdBQWlCLE1BQUEsQ0FBQTs7QUFFakIsSUFBQSxHQUFPLFFBQUEsQ0FBQyxJQUFELENBQUE7QUFDTixNQUFBLEdBQUEsRUFBQSxDQUFBLEVBQUEsR0FBQSxFQUFBO0VBQUEsS0FBQSxHQUFRO0FBQ0M7RUFBQSxLQUFBLHFDQUFBOztJQUFULElBQUEsQ0FBSyxHQUFMO0VBQVM7U0FDVDtBQUhNOztBQUtQLE1BQUEsQ0FBTyxDQUFDLENBQUQsQ0FBUCxFQUFZLElBQUEsQ0FBSyxPQUFMLENBQVo7O0FBQ0EsTUFBQSxDQUFPLENBQUMsQ0FBRCxDQUFQLEVBQVksSUFBQSxDQUFLLFdBQUwsQ0FBWjs7QUFDQSxNQUFBLENBQU8sQ0FBQyxDQUFELENBQVAsRUFBWSxJQUFBLENBQUssT0FBTCxDQUFaOztBQUNBLE1BQUEsQ0FBTyxDQUFDLEVBQUQsQ0FBUCxFQUFhLElBQUEsQ0FBSyxPQUFMLENBQWI7O0FBQ0EsTUFBQSxDQUFPLENBQUMsR0FBRCxDQUFQLEVBQWMsSUFBQSxDQUFLLE9BQUwsQ0FBZDs7QUFDQSxNQUFBLENBQU8sQ0FBQyxDQUFDLENBQUYsQ0FBUCxFQUFhLElBQUEsQ0FBSyxPQUFMLENBQWI7O0FBQ0EsTUFBQSxDQUFPLENBQUMsQ0FBQyxFQUFGLENBQVAsRUFBYyxJQUFBLENBQUssUUFBTCxDQUFkOztBQUNBLE1BQUEsQ0FBTyxDQUFDLEdBQUQsQ0FBUCxFQUFjLElBQUEsQ0FBSyxPQUFMLENBQWQ7O0FBQ0EsTUFBQSxDQUFPLENBQUMsa0JBQUQsQ0FBUCxFQUE2QixJQUFBLENBQUssUUFBTCxDQUE3Qjs7QUFDQSxNQUFBLENBQU8sQ0FBQyxDQUFELEVBQUcsQ0FBSCxFQUFLLENBQUwsRUFBTyxDQUFQLENBQVAsRUFBa0IsSUFBQSxDQUFLLGdCQUFMLENBQWxCOztBQUNBLE1BQUEsQ0FBTyxDQUFDLENBQUQsRUFBRyxDQUFILEVBQUssQ0FBTCxFQUFPLENBQVAsQ0FBUCxFQUFrQixJQUFBLENBQUssY0FBTCxDQUFsQjs7QUFDQSxXQUFBLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJ7ZGl2LCBoMSwgcmVuZGVyYWJsZSwgaW5wdXR9ID0gdGVhY3VwXHJcblxyXG5zdGFjayA9IFtdXHJcblxyXG5yZW5kZXIgPSByZW5kZXJhYmxlICgpIC0+XHJcblx0ZGl2IHN0eWxlOidmb250LWZhbWlseTpDb3VyaWVyIE5ldztmb250LXNpemU6MzBweCcsIC0+XHJcblx0XHRmb3IgaXRlbSBpbiBzdGFja1xyXG5cdFx0XHRoMSBpdGVtXHJcblx0XHRpbnB1dCBpZDoneCcsIHR5cGU6XCJ0ZXh0XCIsIG5hbWU6XCJuclwiLCBvbmtleXVwOm9ua2V5dXAsIHN0eWxlOidmb250LWZhbWlseTpDb3VyaWVyIE5ldztmb250LXNpemU6MzBweCdcclxuXHJcbmNhbGMgPSAoY21kKSAtPlxyXG5cdGlmIGNtZCA9PSAnKycgdGhlbiBzdGFjay5wdXNoIHN0YWNrLnBvcCgpICsgc3RhY2sucG9wKClcclxuXHRlbHNlIFxyXG5cdFx0bnIgPSBwYXJzZUZsb2F0IGNtZFxyXG5cdFx0aWYgbm90IGlzTmFOIG5yIHRoZW4gc3RhY2sucHVzaCBuclxyXG5cclxub25rZXl1cCA9IChldnQpID0+XHJcblx0aWYgZXZ0LmtleSA9PSAnRW50ZXInXHJcblx0XHRjYWxjIGNtZCBmb3IgY21kIGluIGV2dC50YXJnZXQudmFsdWUuc3BsaXQgJyAnXHJcblx0XHRldnQudGFyZ2V0LnZhbHVlID0gJydcclxuXHRcdHJvb3QuaW5uZXJIVE1MID0gcmVuZGVyKClcclxuXHRcdHguZm9jdXMoKVxyXG5cclxucm9vdC5pbm5lckhUTUwgPSByZW5kZXIoKVxyXG5cclxuZXhlYyA9IChjbWRzKSAtPlxyXG5cdHN0YWNrID0gW11cclxuXHRjYWxjIGNtZCBmb3IgY21kIGluIGNtZHMuc3BsaXQgJyAnXHJcblx0c3RhY2tcclxuXHJcbmFzc2VydCBbNV0sIGV4ZWMgJzIgMyArJ1xyXG5hc3NlcnQgWzddLCBleGVjICcyIDEgNCArICsnXHJcbmFzc2VydCBbOV0sIGV4ZWMgJzQgNSArJ1xyXG5hc3NlcnQgWzIwXSwgZXhlYyAnNCA1IConXHJcbmFzc2VydCBbMC44XSwgZXhlYyAnNCA1IC8nXHJcbmFzc2VydCBbLTFdLCBleGVjICc0IDUgLSdcclxuYXNzZXJ0IFstMjNdLCBleGVjICcyMyBjaHMnXHJcbmFzc2VydCBbMC4yXSwgZXhlYyAnNSAxL3gnXHJcbmFzc2VydCBbMC43MDcxMDY3ODExODY1NDc1XSwgZXhlYyAnNDUgc2luJ1xyXG5hc3NlcnQgWzEsMiwzLDRdLCBleGVjICcxIDIgMyA0IDUgZHJvcCdcclxuYXNzZXJ0IFsxLDIsNCwzXSwgZXhlYyAnMSAyIDMgNCBzd2FwJ1xyXG5hc3NlcnRSZWFkeSgpXHJcbiJdfQ==
//# sourceURL=c:\github\LiveShare\2019-10-08\coffee\index.coffee