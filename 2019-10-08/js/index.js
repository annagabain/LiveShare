// Generated by CoffeeScript 2.4.1
var binary, calc, div, exec, h1, input, misc, onkeyup, op1, op2, render, renderable, stack, unary,
  indexOf = [].indexOf;

({div, h1, renderable, input} = teacup);

stack = [];

misc = {};

misc['drop'] = function() {
  return stack.pop();
};

misc['swap'] = function() {
  var a, b;
  a = stack.pop();
  b = stack.pop();
  stack.push(a);
  return stack.push(b);
};

unary = {};

unary['chs'] = function(x) {
  return -x;
};

unary['1/x'] = function(x) {
  return 1 / x;
};

unary['sin'] = function(x) {
  return Math.sin(x / 180 * Math.PI);
};

binary = {};

binary['+'] = function(x, y) {
  return x + y;
};

binary['*'] = function(x, y) {
  return x * y;
};

binary['-'] = function(x, y) {
  return x - y;
};

binary['/'] = function(x, y) {
  return x / y;
};

render = renderable(function() {
  return div({
    style: 'font-family:Courier New;font-size:30px'
  }, function() {
    var i, item, len;
    div(_.keys(misc).join(' '));
    div(_.keys(unary).join(' '));
    div(_.keys(binary).join(' '));
    for (i = 0, len = stack.length; i < len; i++) {
      item = stack[i];
      h1(item);
    }
    return input({
      id: 'x',
      type: "text",
      name: "nr",
      onkeyup: onkeyup,
      style: 'font-family:Courier New;font-size:30px'
    });
  });
});

op1 = function(f) {
  var x;
  x = stack.pop();
  return stack.push(f(x));
};

op2 = function(f) {
  var x, y;
  x = stack.pop();
  y = stack.pop();
  return stack.push(f(y, x));
};

calc = function(cmd) {
  var nr;
  if (indexOf.call(_.keys(misc), cmd) >= 0) {
    return misc[cmd]();
  }
  if (indexOf.call(_.keys(unary), cmd) >= 0) {
    return op1(unary[cmd]);
  }
  if (indexOf.call(_.keys(binary), cmd) >= 0) {
    return op2(binary[cmd]);
  }
  nr = parseFloat(cmd);
  if (!isNaN(nr)) {
    return stack.push(nr);
  }
};

onkeyup = (evt) => {
  var cmd, i, len, ref;
  if (evt.key === 'Enter') {
    if (evt.target.value === '') {
      stack.push(_.last(stack));
    } else {
      ref = evt.target.value.split(' ');
      for (i = 0, len = ref.length; i < len; i++) {
        cmd = ref[i];
        calc(cmd);
      }
    }
    evt.target.value = '';
    root.innerHTML = render();
    return x.focus();
  }
};

root.innerHTML = render();

exec = function(cmds) {
  var cmd, i, len, ref;
  stack = [];
  ref = cmds.split(' ');
  for (i = 0, len = ref.length; i < len; i++) {
    cmd = ref[i];
    calc(cmd);
  }
  return stack;
};

assert([5], exec('2 3 +'));

assert([7], exec('2 1 4 + +'));

assert([9], exec('4 5 +'));

assert([20], exec('4 5 *'));

assert([0.8], exec('4 5 /'));

assert([-1], exec('4 5 -'));

assert([-23], exec('23 chs'));

assert([0.2], exec('5 1/x'));

assert([0.7071067811865475], exec('45 sin'));

assert([1, 2, 3, 4], exec('1 2 3 4 5 drop'));

assert([1, 2, 4, 3], exec('1 2 3 4 swap'));

assertReady();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiLi4iLCJzb3VyY2VzIjpbImNvZmZlZVxcaW5kZXguY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxJQUFBLE1BQUEsRUFBQSxJQUFBLEVBQUEsR0FBQSxFQUFBLElBQUEsRUFBQSxFQUFBLEVBQUEsS0FBQSxFQUFBLElBQUEsRUFBQSxPQUFBLEVBQUEsR0FBQSxFQUFBLEdBQUEsRUFBQSxNQUFBLEVBQUEsVUFBQSxFQUFBLEtBQUEsRUFBQSxLQUFBO0VBQUE7O0FBQUEsQ0FBQSxDQUFDLEdBQUQsRUFBTSxFQUFOLEVBQVUsVUFBVixFQUFzQixLQUF0QixDQUFBLEdBQStCLE1BQS9COztBQUVBLEtBQUEsR0FBUTs7QUFFUixJQUFBLEdBQU8sQ0FBQTs7QUFDUCxJQUFLLENBQUEsTUFBQSxDQUFMLEdBQWUsUUFBQSxDQUFBLENBQUE7U0FBRyxLQUFLLENBQUMsR0FBTixDQUFBO0FBQUg7O0FBQ2YsSUFBSyxDQUFBLE1BQUEsQ0FBTCxHQUFlLFFBQUEsQ0FBQSxDQUFBO0FBQ2QsTUFBQSxDQUFBLEVBQUE7RUFBQSxDQUFBLEdBQUksS0FBSyxDQUFDLEdBQU4sQ0FBQTtFQUNKLENBQUEsR0FBSSxLQUFLLENBQUMsR0FBTixDQUFBO0VBQ0osS0FBSyxDQUFDLElBQU4sQ0FBVyxDQUFYO1NBQ0EsS0FBSyxDQUFDLElBQU4sQ0FBVyxDQUFYO0FBSmM7O0FBTWYsS0FBQSxHQUFRLENBQUE7O0FBQ1IsS0FBTSxDQUFBLEtBQUEsQ0FBTixHQUFlLFFBQUEsQ0FBQyxDQUFELENBQUE7U0FBTyxDQUFDO0FBQVI7O0FBQ2YsS0FBTSxDQUFBLEtBQUEsQ0FBTixHQUFlLFFBQUEsQ0FBQyxDQUFELENBQUE7U0FBTyxDQUFBLEdBQUU7QUFBVDs7QUFDZixLQUFNLENBQUEsS0FBQSxDQUFOLEdBQWUsUUFBQSxDQUFDLENBQUQsQ0FBQTtTQUFPLElBQUksQ0FBQyxHQUFMLENBQVMsQ0FBQSxHQUFJLEdBQUosR0FBVSxJQUFJ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Q0FBUCxFQUFjLElBQUEsQ0FBSyxPQUFMLENBQWQ7O0FBQ0EsTUFBQSxDQUFPLENBQUMsa0JBQUQsQ0FBUCxFQUE2QixJQUFBLENBQUssUUFBTCxDQUE3Qjs7QUFDQSxNQUFBLENBQU8sQ0FBQyxDQUFELEVBQUcsQ0FBSCxFQUFLLENBQUwsRUFBTyxDQUFQLENBQVAsRUFBa0IsSUFBQSxDQUFLLGdCQUFMLENBQWxCOztBQUNBLE1BQUEsQ0FBTyxDQUFDLENBQUQsRUFBRyxDQUFILEVBQUssQ0FBTCxFQUFPLENBQVAsQ0FBUCxFQUFrQixJQUFBLENBQUssY0FBTCxDQUFsQjs7QUFFQSxXQUFBLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJ7ZGl2LCBoMSwgcmVuZGVyYWJsZSwgaW5wdXR9ID0gdGVhY3VwXHJcblxyXG5zdGFjayA9IFtdXHJcblxyXG5taXNjID0ge31cclxubWlzY1snZHJvcCddID0gLT4gc3RhY2sucG9wKClcclxubWlzY1snc3dhcCddID0gLT4gXHJcblx0YSA9IHN0YWNrLnBvcCgpXHJcblx0YiA9IHN0YWNrLnBvcCgpXHJcblx0c3RhY2sucHVzaCBhXHJcblx0c3RhY2sucHVzaCBiXHJcblxyXG51bmFyeSA9IHt9XHJcbnVuYXJ5WydjaHMnXSA9ICh4KSAtPiAteFxyXG51bmFyeVsnMS94J10gPSAoeCkgLT4gMS94XHJcbnVuYXJ5WydzaW4nXSA9ICh4KSAtPiBNYXRoLnNpbiB4IC8gMTgwICogTWF0aC5QSVxyXG5cclxuYmluYXJ5ID0ge31cclxuYmluYXJ5WycrJ10gPSAoeCx5KSAtPiB4K3lcclxuYmluYXJ5WycqJ10gPSAoeCx5KSAtPiB4KnlcclxuYmluYXJ5WyctJ10gPSAoeCx5KSAtPiB4LXlcclxuYmluYXJ5WycvJ10gPSAoeCx5KSAtPiB4L3lcclxuXHJcbnJlbmRlciA9IHJlbmRlcmFibGUgKCkgLT5cclxuXHRkaXYgc3R5bGU6J2ZvbnQtZmFtaWx5OkNvdXJpZXIgTmV3O2ZvbnQtc2l6ZTozMHB4JywgLT5cclxuXHRcdGRpdiBfLmtleXMobWlzYykuam9pbiAnICdcclxuXHRcdGRpdiBfLmtleXModW5hcnkpLmpvaW4gJyAnXHJcblx0XHRkaXYgXy5rZXlzKGJpbmFyeSkuam9pbiAnICdcclxuXHRcdGZvciBpdGVtIGluIHN0YWNrXHJcblx0XHRcdGgxIGl0ZW1cclxuXHRcdGlucHV0IGlkOid4JywgdHlwZTpcInRleHRcIiwgbmFtZTpcIm5yXCIsIG9ua2V5dXA6b25rZXl1cCwgc3R5bGU6J2ZvbnQtZmFtaWx5OkNvdXJpZXIgTmV3O2ZvbnQtc2l6ZTozMHB4J1xyXG5cclxub3AxID0gKGYpIC0+XHJcblx0eCA9IHN0YWNrLnBvcCgpXHJcblx0c3RhY2sucHVzaCBmIHhcclxuXHJcbm9wMiA9IChmKSAtPlxyXG5cdHggPSBzdGFjay5wb3AoKVxyXG5cdHkgPSBzdGFjay5wb3AoKVxyXG5cdHN0YWNrLnB1c2ggZiB5LHhcclxuXHJcbmNhbGMgPSAoY21kKSAtPlxyXG5cdGlmIGNtZCBpbiBfLmtleXMgbWlzYyAgIHRoZW4gcmV0dXJuIG1pc2NbY21kXSgpXHJcblx0aWYgY21kIGluIF8ua2V5cyB1bmFyeSAgdGhlbiByZXR1cm4gb3AxIHVuYXJ5W2NtZF1cclxuXHRpZiBjbWQgaW4gXy5rZXlzIGJpbmFyeSB0aGVuIHJldHVybiBvcDIgYmluYXJ5W2NtZF1cclxuXHRuciA9IHBhcnNlRmxvYXQgY21kXHJcblx0aWYgbm90IGlzTmFOIG5yIHRoZW4gc3RhY2sucHVzaCBuclxyXG5cclxub25rZXl1cCA9IChldnQpID0+IFxyXG5cdGlmIGV2dC5rZXkgPT0gJ0VudGVyJyBcclxuXHRcdGlmIGV2dC50YXJnZXQudmFsdWUgPT0gJycgdGhlbiBzdGFjay5wdXNoIF8ubGFzdCBzdGFja1xyXG5cdFx0ZWxzZSBjYWxjIGNtZCBmb3IgY21kIGluIGV2dC50YXJnZXQudmFsdWUuc3BsaXQgJyAnXHRcdFx0XHRcclxuXHRcdGV2dC50YXJnZXQudmFsdWUgPSAnJ1xyXG5cdFx0cm9vdC5pbm5lckhUTUwgPSByZW5kZXIoKVxyXG5cdFx0eC5mb2N1cygpXHJcblxyXG5yb290LmlubmVySFRNTCA9IHJlbmRlcigpXHJcblxyXG5leGVjID0gKGNtZHMpIC0+XHJcblx0c3RhY2sgPSBbXVxyXG5cdGNhbGMgY21kIGZvciBjbWQgaW4gY21kcy5zcGxpdCAnICdcclxuXHRzdGFja1xyXG5cclxuYXNzZXJ0IFs1XSwgZXhlYyAnMiAzICsnXHJcbmFzc2VydCBbN10sIGV4ZWMgJzIgMSA0ICsgKydcclxuYXNzZXJ0IFs5XSwgZXhlYyAnNCA1ICsnXHJcbmFzc2VydCBbMjBdLCBleGVjICc0IDUgKidcclxuYXNzZXJ0IFswLjhdLCBleGVjICc0IDUgLydcclxuYXNzZXJ0IFstMV0sIGV4ZWMgJzQgNSAtJ1xyXG5hc3NlcnQgWy0yM10sIGV4ZWMgJzIzIGNocydcclxuYXNzZXJ0IFswLjJdLCBleGVjICc1IDEveCdcclxuYXNzZXJ0IFswLjcwNzEwNjc4MTE4NjU0NzVdLCBleGVjICc0NSBzaW4nXHJcbmFzc2VydCBbMSwyLDMsNF0sIGV4ZWMgJzEgMiAzIDQgNSBkcm9wJ1xyXG5hc3NlcnQgWzEsMiw0LDNdLCBleGVjICcxIDIgMyA0IHN3YXAnXHJcblxyXG5hc3NlcnRSZWFkeSgpXHJcbiJdfQ==
//# sourceURL=c:\github\LiveShare\2019-10-08\coffee\index.coffee